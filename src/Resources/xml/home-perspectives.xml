<layouts>
<layout name="General" style="0" type="8" expression="" trainswitch="0">
	<chart id="47" name="" title="Overview" >
		<property name="title" type="QString" value="Overview" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="config" type="QString" value="{\n  &quot;version&quot;:&quot;2.0&quot;,\n  &quot;widths&quot;:[ 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200 ],\n  &quot;CHARTS&quot;:[\n    { &quot;type&quot;:108,&quot;span&quot;:1,&quot;deep&quot;:15,&quot;column&quot;:0,&quot;order&quot;:110,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;total_distance&quot;,&quot;datafilter&quot;:&quot;filter:isRide &quot;,&quot;name&quot;:&quot;Going Long&quot; },\n    { &quot;type&quot;:108,&quot;span&quot;:1,&quot;deep&quot;:16,&quot;column&quot;:0,&quot;order&quot;:168,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;skiba_wprime_low&quot;,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;Going Deep&quot; },\n    { &quot;type&quot;:108,&quot;span&quot;:1,&quot;deep&quot;:17,&quot;column&quot;:0,&quot;order&quot;:179,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;average_speed&quot;,&quot;datafilter&quot;:&quot;filter:isRide &quot;,&quot;name&quot;:&quot;Going Fast&quot; },\n    { &quot;type&quot;:113,&quot;span&quot;:4,&quot;deep&quot;:32,&quot;column&quot;:0,&quot;order&quot;:193,&quot;settings&quot;:&quot;{ \&quot;title\&quot;: \&quot; \&quot;,\n\&quot;description\&quot;: \&quot;A description of the chart, mostly useful when the chart is uploaded to the cloud to let others know what this chart is useful for etc. \&quot;,\n\&quot;type\&quot;: 1,\n\&quot;animate\&quot;: false,\n\&quot;intervalrefresh\&quot;: false,\n\&quot;legendpos\&quot;: 2,\n\&quot;stack\&quot;: false,\n\&quot;orientation\&quot;: 1,\n\&quot;bgcolor\&quot;: \&quot;#010161\&quot;, \n\&quot;scale\&quot;: 2.5,\n\&quot;SERIES\&quot;: [\n{ \&quot;name\&quot;: \&quot;CTL \&quot;, \&quot;group\&quot;: \&quot; \&quot;, \&quot;xname\&quot;: \&quot;Date \&quot;, \&quot;yname\&quot;: \&quot;TSS \&quot;, \&quot;program\&quot;: \&quot;{:sl:n    finalise {:sl:n        # we just fetch metrics at the end:sl:n        xx &lt;- pmc(BikeStress, date);:sl:n        yy &lt;- pmc(BikeStress, lts);:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n \&quot;, \&quot;line\&quot;: 1, \&quot;symbol\&quot;: 0, \&quot;size\&quot;: 2, \&quot;color\&quot;: \&quot;#010129\&quot;, \&quot;opacity\&quot;: 100, \&quot;legend\&quot;: true, \&quot;opengl\&quot;: true, \&quot;datalabels\&quot;: false, \&quot;aggregate\&quot;: 1, \&quot;fill\&quot;: false},\n{ \&quot;name\&quot;: \&quot;ATL \&quot;, \&quot;group\&quot;: \&quot; \&quot;, \&quot;xname\&quot;: \&quot;Date \&quot;, \&quot;yname\&quot;: \&quot;TSS \&quot;, \&quot;program\&quot;: \&quot;{:sl:n    finalise {:sl:n        # we just fetch metrics at the end:sl:n        xx &lt;- pmc(BikeStress, date);:sl:n        yy &lt;- pmc(BikeStress, sts);:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n \&quot;, \&quot;line\&quot;: 1, \&quot;symbol\&quot;: 0, \&quot;size\&quot;: 2, \&quot;color\&quot;: \&quot;#010128\&quot;, \&quot;opacity\&quot;: 100, \&quot;legend\&quot;: true, \&quot;opengl\&quot;: true, \&quot;datalabels\&quot;: false, \&quot;aggregate\&quot;: 1, \&quot;fill\&quot;: false},\n{ \&quot;name\&quot;: \&quot;TSB \&quot;, \&quot;group\&quot;: \&quot; \&quot;, \&quot;xname\&quot;: \&quot;Date \&quot;, \&quot;yname\&quot;: \&quot;TSS \&quot;, \&quot;program\&quot;: \&quot;{:sl:n    finalise {:sl:n        # we just fetch metrics at the end:sl:n        xx &lt;- pmc(BikeStress, date);:sl:n        yy &lt;- pmc(BikeStress, sb);:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n \&quot;, \&quot;line\&quot;: 1, \&quot;symbol\&quot;: 0, \&quot;size\&quot;: 2, \&quot;color\&quot;: \&quot;#01012a\&quot;, \&quot;opacity\&quot;: 100, \&quot;legend\&quot;: true, \&quot;opengl\&quot;: true, \&quot;datalabels\&quot;: false, \&quot;aggregate\&quot;: 1, \&quot;fill\&quot;: false} ]\n,\n\&quot;AXES\&quot;: [\n{ \&quot;name\&quot;: \&quot;Date \&quot;, \&quot;type\&quot;: 1, \&quot;orientation\&quot;: 1, \&quot;align\&quot;: 1, \&quot;minx\&quot;: 0, \&quot;maxx\&quot;: 0, \&quot;miny\&quot;: 0, \&quot;maxy\&quot;: 0, \&quot;smooth\&quot;: 0, \&quot;groupby\&quot;: 1, \&quot;visible\&quot;: true, \&quot;fixed\&quot;: false, \&quot;log\&quot;: false, \&quot;minorgrid\&quot;: false, \&quot;majorgrid\&quot;: true, \&quot;labelcolor\&quot;: \&quot;#6569a5\&quot;, \&quot;axiscolor\&quot;: \&quot;#6569a5\&quot;},\n{ \&quot;name\&quot;: \&quot;TSS \&quot;, \&quot;type\&quot;: 0, \&quot;orientation\&quot;: 2, \&quot;align\&quot;: 1, \&quot;minx\&quot;: 0, \&quot;maxx\&quot;: 0, \&quot;miny\&quot;: 0, \&quot;maxy\&quot;: 0, \&quot;smooth\&quot;: 0, \&quot;groupby\&quot;: 0, \&quot;visible\&quot;: true, \&quot;fixed\&quot;: false, \&quot;log\&quot;: false, \&quot;minorgrid\&quot;: false, \&quot;majorgrid\&quot;: true, \&quot;labelcolor\&quot;: \&quot;#010129\&quot;, \&quot;axiscolor\&quot;: \&quot;#010129\&quot;} ]\n} &quot;,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;PMC&quot; },\n    { &quot;type&quot;:113,&quot;span&quot;:6,&quot;deep&quot;:18,&quot;column&quot;:0,&quot;order&quot;:195,&quot;settings&quot;:&quot;{ \&quot;title\&quot;: \&quot; \&quot;,\n\&quot;description\&quot;: \&quot;A description of the chart, mostly useful when the chart is uploaded to the cloud to let others know what this chart is useful for etc. \&quot;,\n\&quot;type\&quot;: 3,\n\&quot;animate\&quot;: false,\n\&quot;intervalrefresh\&quot;: false,\n\&quot;legendpos\&quot;: 2,\n\&quot;stack\&quot;: false,\n\&quot;orientation\&quot;: 1,\n\&quot;bgcolor\&quot;: \&quot;#010161\&quot;, \n\&quot;scale\&quot;: 2.5,\n\&quot;SERIES\&quot;: [\n{ \&quot;name\&quot;: \&quot;TSS \&quot;, \&quot;group\&quot;: \&quot; \&quot;, \&quot;xname\&quot;: \&quot;Date \&quot;, \&quot;yname\&quot;: \&quot;TSS \&quot;, \&quot;program\&quot;: \&quot;{:sl:n:sl:n    finalise {:sl:n        # we just fetch metrics at the end:sl:n        xx &lt;- metrics(date);:sl:n        yy &lt;- round(metrics(BikeStress));:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n \&quot;, \&quot;line\&quot;: 1, \&quot;symbol\&quot;: 0, \&quot;size\&quot;: 1, \&quot;color\&quot;: \&quot;#010126\&quot;, \&quot;opacity\&quot;: 100, \&quot;legend\&quot;: true, \&quot;opengl\&quot;: true, \&quot;datalabels\&quot;: true, \&quot;aggregate\&quot;: 0, \&quot;fill\&quot;: false} ]\n,\n\&quot;AXES\&quot;: [\n{ \&quot;name\&quot;: \&quot;Date \&quot;, \&quot;type\&quot;: 1, \&quot;orientation\&quot;: 1, \&quot;align\&quot;: 1, \&quot;minx\&quot;: 0, \&quot;maxx\&quot;: 0, \&quot;miny\&quot;: 0, \&quot;maxy\&quot;: 0, \&quot;smooth\&quot;: 0, \&quot;groupby\&quot;: 3, \&quot;visible\&quot;: true, \&quot;fixed\&quot;: false, \&quot;log\&quot;: false, \&quot;minorgrid\&quot;: false, \&quot;majorgrid\&quot;: true, \&quot;labelcolor\&quot;: \&quot;#6569a5\&quot;, \&quot;axiscolor\&quot;: \&quot;#6569a5\&quot;},\n{ \&quot;name\&quot;: \&quot;TSS \&quot;, \&quot;type\&quot;: 0, \&quot;orientation\&quot;: 2, \&quot;align\&quot;: 1, \&quot;minx\&quot;: 0, \&quot;maxx\&quot;: 0, \&quot;miny\&quot;: 0, \&quot;maxy\&quot;: 0, \&quot;smooth\&quot;: 0, \&quot;groupby\&quot;: 0, \&quot;visible\&quot;: true, \&quot;fixed\&quot;: false, \&quot;log\&quot;: false, \&quot;minorgrid\&quot;: false, \&quot;majorgrid\&quot;: true, \&quot;labelcolor\&quot;: \&quot;#010126\&quot;, \&quot;axiscolor\&quot;: \&quot;#010126\&quot;} ]\n} &quot;,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;Monthly Load&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:8,&quot;column&quot;:1,&quot;order&quot;:1449,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((max(metrics(date))-min(metrics(date))+1):sl:/7,1); round(sum(metrics(Distance)):sl:/weeks); } &quot;,&quot;units&quot;:&quot;km&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:300,&quot;datafilter&quot;:&quot;filter: &quot;,&quot;name&quot;:&quot;Weekly Distance&quot; },\n    { &quot;type&quot;:110,&quot;span&quot;:2,&quot;deep&quot;:24,&quot;column&quot;:1,&quot;order&quot;:1469,&quot;color&quot;:&quot;#010161&quot;,&quot;xsymbol&quot;:&quot;activity_date&quot;,&quot;ysymbol&quot;:&quot;average_power&quot;,&quot;zsymbol&quot;:&quot;coggan_tss&quot;,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Activities&quot; },\n    { &quot;type&quot;:112,&quot;span&quot;:2,&quot;deep&quot;:16,&quot;column&quot;:1,&quot;order&quot;:1470,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{:sl:n:sl:n# column names, if using metrics then best:sl:n# to use metricname() to get correct name for locale:sl:n# otherwise it won&apos;t translate to other languages:sl:nnames { :sl:n    c(:qu:Name:qu:,:qu:Description:qu:,:qu:Low:qu:,:qu:High:qu:,:qu:Time:qu:,:qu:%:qu:);:sl:n}:sl:n:sl:n# column units, if using metrics then best:sl:n# to use metricunit() function to get correct string:sl:n# for locale and metric:sl:/imperial:sl:nunits {:sl:n:sl:n    c(:qu::qu:,:sl:n      :qu::qu:,:sl:n      zones(power,units),:sl:n      zones(power,units), :qu::qu:, :qu::qu:);:sl:n}:sl:n:sl:n# values to display as doubles or strings:sl:n# if using metrics always best to use asstring():sl:n# to convert correctly with dp, metric:sl:/imperial:sl:n# or specific formats eg. rowing pace xx:sl:/500m:sl:nvalues { :sl:n:sl:n   c( zones(power,name),:sl:n      zones(power,description),:sl:n      zones(power,low),:sl:n      zones(power,high),:sl:n      zones(power,time),:sl:n      zones(power,percent));:sl:n} :sl:n:sl:n}:sl:n &quot;,&quot;sortcolumn&quot;:-1,&quot;sortorder&quot;:0,&quot;datafilter&quot;:&quot;filter: &quot;,&quot;name&quot;:&quot;Power Zones&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:8,&quot;column&quot;:2,&quot;order&quot;:11,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((max(metrics(date))-min(metrics(date))+1):sl:/7,1);  round(10*sum(metrics(Duration):sl:/3600):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;hours&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:15,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Weekly Hours&quot; },\n    { &quot;type&quot;:101,&quot;span&quot;:1,&quot;deep&quot;:8,&quot;column&quot;:3,&quot;order&quot;:115,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;coggan_tss&quot;,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;Total TSS&quot; },\n    { &quot;type&quot;:103,&quot;span&quot;:1,&quot;deep&quot;:15,&quot;column&quot;:3,&quot;order&quot;:153,&quot;color&quot;:&quot;#010161&quot;,&quot;series&quot;:10,&quot;polarized&quot;:0,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;Power Zones&quot; },\n    { &quot;type&quot;:109,&quot;span&quot;:1,&quot;deep&quot;:13,&quot;column&quot;:3,&quot;order&quot;:154,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;workout_time&quot;,&quot;meta&quot;:&quot;Workout Code&quot;,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Workout&quot; },\n    { &quot;type&quot;:101,&quot;span&quot;:1,&quot;deep&quot;:5,&quot;column&quot;:3,&quot;order&quot;:265,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;workout_time&quot;,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Workout Time&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:5,&quot;column&quot;:3,&quot;order&quot;:357,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ round(max(pmc(BikeStress, lts))); } &quot;,&quot;units&quot;:&quot;stress&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:125,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Peak CTL&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:8,&quot;column&quot;:4,&quot;order&quot;:807,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ :sl:nround(max(banister(BikeScore, Power_Index,cp)));:sl:n} &quot;,&quot;units&quot;:&quot;watts&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:360,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Peak CP Estimate &quot; },\n    { &quot;type&quot;:113,&quot;span&quot;:2,&quot;deep&quot;:24,&quot;column&quot;:4,&quot;order&quot;:825,&quot;settings&quot;:&quot;{ \&quot;title\&quot;: \&quot; \&quot;,\n\&quot;description\&quot;: \&quot; \&quot;,\n\&quot;type\&quot;: 2,\n\&quot;animate\&quot;: false,\n\&quot;intervalrefresh\&quot;: false,\n\&quot;legendpos\&quot;: 2,\n\&quot;stack\&quot;: false,\n\&quot;orientation\&quot;: 2,\n\&quot;bgcolor\&quot;: \&quot;#010161\&quot;, \n\&quot;scale\&quot;: 2.5,\n\&quot;SERIES\&quot;: [\n{ \&quot;name\&quot;: \&quot;IF \&quot;, \&quot;group\&quot;: \&quot; \&quot;, \&quot;xname\&quot;: \&quot;TSB \&quot;, \&quot;yname\&quot;: \&quot;IF \&quot;, \&quot;program\&quot;: \&quot;{:sl:n    finalise {:sl:n        # we just fetch metrics at the end :sl:n        dates &lt;- metrics(date);:sl:n        pmcdates &lt;- pmc(BikeStress, date);:sl:n        indexes &lt;- match(dates, pmcdates);:sl:n        xx &lt;- pmc(BikeStress, sb)[indexes];:sl:n        yy &lt;- metrics(BikeIntensity);:sl:n        ff &lt;- filename();:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n    f { ff; }:sl:n}:sl:n \&quot;, \&quot;line\&quot;: 0, \&quot;symbol\&quot;: 1, \&quot;size\&quot;: 20, \&quot;color\&quot;: \&quot;#ff3efc\&quot;, \&quot;opacity\&quot;: 100, \&quot;legend\&quot;: true, \&quot;opengl\&quot;: false, \&quot;datalabels\&quot;: false, \&quot;aggregate\&quot;: 0, \&quot;fill\&quot;: false},\n{ \&quot;name\&quot;: \&quot;Tests \&quot;, \&quot;group\&quot;: \&quot; \&quot;, \&quot;xname\&quot;: \&quot;TSB \&quot;, \&quot;yname\&quot;: \&quot;IF \&quot;, \&quot;program\&quot;: \&quot;{:sl:n:sl:n    calc {:sl:n        dates &lt;- metrics(date);:sl:n        pmcdates &lt;- pmc(BikeStress, date);:sl:n        indexes &lt;- match(dates, pmcdates);:sl:n        xx &lt;- pmc(BikeStress, sb)[indexes];:sl:n        yy &lt;- metrics(BikeIntensity);:sl:n        ff &lt;- filename();:sl:n    }:sl:n:sl:n    finalise {:sl:n        # we just fetch metrics at the end :sl:n        activities(:qu:tests(user,power) &gt;0:qu:, calc());:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n    f { ff; }:sl:n}:sl:n \&quot;, \&quot;line\&quot;: 0, \&quot;symbol\&quot;: 1, \&quot;size\&quot;: 20, \&quot;color\&quot;: \&quot;#010110\&quot;, \&quot;opacity\&quot;: 100, \&quot;legend\&quot;: true, \&quot;opengl\&quot;: false, \&quot;datalabels\&quot;: false, \&quot;aggregate\&quot;: 0, \&quot;fill\&quot;: false} ]\n,\n\&quot;AXES\&quot;: [\n{ \&quot;name\&quot;: \&quot;TSB \&quot;, \&quot;type\&quot;: 0, \&quot;orientation\&quot;: 1, \&quot;align\&quot;: 1, \&quot;minx\&quot;: -15, \&quot;maxx\&quot;: 15, \&quot;miny\&quot;: 0, \&quot;maxy\&quot;: 0, \&quot;smooth\&quot;: 0, \&quot;groupby\&quot;: 0, \&quot;visible\&quot;: true, \&quot;fixed\&quot;: true, \&quot;log\&quot;: false, \&quot;minorgrid\&quot;: false, \&quot;majorgrid\&quot;: true, \&quot;labelcolor\&quot;: \&quot;#6569a5\&quot;, \&quot;axiscolor\&quot;: \&quot;#6569a5\&quot;},\n{ \&quot;name\&quot;: \&quot;IF \&quot;, \&quot;type\&quot;: 0, \&quot;orientation\&quot;: 2, \&quot;align\&quot;: 1, \&quot;minx\&quot;: 0, \&quot;maxx\&quot;: 0, \&quot;miny\&quot;: 0.4, \&quot;maxy\&quot;: 1.2, \&quot;smooth\&quot;: 0, \&quot;groupby\&quot;: 0, \&quot;visible\&quot;: true, \&quot;fixed\&quot;: true, \&quot;log\&quot;: false, \&quot;minorgrid\&quot;: false, \&quot;majorgrid\&quot;: true, \&quot;labelcolor\&quot;: \&quot;#ff3efc\&quot;, \&quot;axiscolor\&quot;: \&quot;#ff3efc\&quot;} ]\n} &quot;,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;Scatter PMC &quot; },\n    { &quot;type&quot;:112,&quot;span&quot;:2,&quot;deep&quot;:16,&quot;column&quot;:4,&quot;order&quot;:826,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{:sl:n:sl:n# column names, if using metrics then best:sl:n# to use name() to get correct name for locale:sl:n# otherwise it won&apos;t translate to other languages:sl:nnames {:sl:n    metricname(date,:sl:n         Duration,:sl:n         Distance,:sl:n         Work,:sl:n         W&apos;_Work,:sl:n         30_min_Peak_Power);:sl:n}:sl:n:sl:n# column units, if using metrics then best:sl:n# to use unit() function to get correct string:sl:n# for locale and metric:sl:/imperial:sl:nunits {:sl:n    metricunit(date,:sl:n         Duration,:sl:n         Distance,:sl:n         Work,:sl:n         W&apos;_Work,:sl:n         30_min_Peak_Power);:sl:n}:sl:n:sl:n# values to display as doubles or strings:sl:n# if using metrics always best to use asstring():sl:n# to convert correctly with dp, metric:sl:/imperial:sl:n# or specific formats eg. rowing pace xx:sl:/500m:sl:nvalues { :sl:n    c(metricstrings(date),:sl:n      metricstrings(Duration),:sl:n      metricstrings(Distance),:sl:n      metricstrings(Work),:sl:n      metricstrings(W&apos;_Work),:sl:n      metricstrings(30_min_Peak_Power)); :sl:n} :sl:n:sl:nf {:sl:n    filename();:sl:n}:sl:n:sl:n} &quot;,&quot;sortcolumn&quot;:-1,&quot;sortorder&quot;:0,&quot;datafilter&quot;:&quot;filter:tests(user,power) &quot;,&quot;name&quot;:&quot;Performance tests&quot; },\n    { &quot;type&quot;:112,&quot;span&quot;:2,&quot;deep&quot;:32,&quot;column&quot;:4,&quot;order&quot;:827,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{:sl:n:sl:n# column names, if using metrics then best:sl:n# to use metricname() to get correct name for locale:sl:n# otherwise it won&apos;t translate to other languages:sl:nnames {:sl:n    c(:qu:Date:qu:, :qu:Daily:qu:, :qu:Chronic:qu:, :qu:Acute:qu:, :qu:Stress:qu:);:sl:n}:sl:n:sl:n# column units, if using metrics then best:sl:n# to use metricunit() function to get correct string:sl:n# for locale and metric:sl:/imperial:sl:nunits {:sl:n    c(:qu::qu:,:qu:TSS:qu:, :qu:Load:qu:,:qu:Load:qu:,:qu:Balance:qu:);:sl:n}:sl:n:sl:n# values to display as doubles or strings:sl:n# if using metrics always best to use asstring():sl:n# to convert correctly with dp, metric:sl:/imperial:sl:n# or specific formats eg. rowing pace xx:sl:/500m:sl:nvalues { :sl:n    c(datestring(pmc(BikeStress,date)),:sl:n      round(pmc(BikeStress,stress)),:sl:n      round(pmc(BikeStress,lts)),:sl:n      round(pmc(BikeStress,sts)),:sl:n      round(pmc(BikeStress,sb)));:sl:n:sl:n} :sl:n:sl:n:sl:n} &quot;,&quot;sortcolumn&quot;:-1,&quot;sortorder&quot;:0,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;PMC Data&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:8,&quot;column&quot;:5,&quot;order&quot;:1,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ round(max(estimates(cp3,w&apos;):sl:/1000)*10):sl:/10; } &quot;,&quot;units&quot;:&quot;kJ&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:25,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;Peak W&apos; Estimate &quot; }\n  ]\n}\n" />
		<property name="minimumColumns" type="int" value="5" />
	</chart>
	<chart id="7" name="" title="PMC" >
		<property name="title" type="QString" value="PMC" />
		<property name="subtitle" type="QString" value="PMC" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="2" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="1" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Sat Aug 17 2013" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="AAAAGABQAE0AQwAgACgAQwBvAGcAZwBhAG4AKQAAABwATABhAHMAdAAgADEAMgAgAG0AbwBuAHQAaABzACWHLgAAAAD/ACWImgAAAAD/AAAAAQAB////////////////AAAAFQAAAAQAAAACAAAAABQAYwBvAGcAZwBhAG4AXwBhAHQAbAAAADQAQwBvAGcAZwBhAG4AIABBAGMAdQB0AGUAIABUAHIAYQBpAG4AaQBuAGcAIABMAG8AYQBkAAAANABDAG8AZwBnAGEAbgAgAEEAYwB1AHQAZQAgAFQAcgBhAGkAbgBpAG4AZwAgAEwAbwBhAGQAAAAMAFMAdAByAGUAcwBzAAAAAAADAAAAAAAAAAAAAAAAAQAAf6gAAAAAAXIqeAAAAAAAAAAB//////////8B/////wAA//8AAAAAAAA/8AAAAAAAAAAAAAAB//8AAAAAAAAAAAAAAAAAAAAAAgAADhD/////AAAACgAAAAAAAAAAAAAAAAwAMgAgAFAAYQByAG0AAAAAAAAD5wAADhAAAAAAAAD//////////wAAAAH/////AAAAAAAAAAABAQEAAAAWAHAAbwB3AGUAcgBfAGkAbgBkAGUAeAAAAAIAAAAAFABjAG8AZwBnAGEAbgBfAGMAdABsAAAAOABDAG8AZwBnAGEAbgAgAEMAaAByAG8AbgBpAGMAIABUAHIAYQBpAG4AaQBuAGcAIABMAG8AYQBkAAAAOABDAG8AZwBnAGEAbgAgAEMAaAByAG8AbgBpAGMAIABUAHIAYQBpAG4AaQBuAGcAIABMAG8AYQBkAAAADABTAHQAcgBlAHMAcwAAAAAAAwAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAQAAH+o6y0O+v//////////Af//AAD/////AAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAAAIAAA4Q/////wAAAAoAAAAAAAAAAAAAAAAMADIAIABQAGEAcgBtAAAAAAAAA+cAAA4QAAAAAAAA//////////8AAAAB/////wAAAAAAAAAAAQEBAAAAFgBwAG8AdwBlAHIAXwBpAG4AZABlAHgAAAACAAAAABQAYwBvAGcAZwBhAG4AXwB0AHMAYgAAADwAQwBvAGcAZwBhAG4AIABUAHIAYQBpAG4AaQBuAGcAIABTAHQAcgBlAHMAcwAgAEIAYQBsAGEAbgBjAGUAAAA8AEMAbwBnAGcAYQBuACAAVAByAGEAaQBuAGkAbgBnACAAUwB0AHIAZQBzAHMAIABCAGEAbABhAG4AYwBlAAAADABTAHQAcgBlAHMAcwAAAAAAAwAAAADAjzgAAAAAAAEAAAAAAAAAAAAAAAEAAH+o7MONsP//////////Af///////wAAAAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAAAIAAA4Q/////wAAAAoAAAAAAAAAAAMAAAAMADIAIABQAGEAcgBtAAAAAAAAA+cAAA4QAAAAAAAA//////////8AAAAB/////wAAAAAAAAAAAQEBAAAAFgBwAG8AdwBlAHIAXwBpAG4AZABlAHgAAAAHAAAAABQAYwBvAGcAZwBhAG4AXwB0AHMAcwAAABQAQgBpAGsAZQBTAHQAcgBlAHMAcwAAAAQAUgBSAAAADABTAHQAcgBlAHMAcwAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABuAAAAW///////////Af//AAD//39/AAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAAAAAAA4QAAAAGgBjAG8AZwBnAGEAbgBfAHQAcwBzAF8AcgByAAAAAQAAAAAAAAAAAwAAAAwAMgAgAFAAYQByAG0AAAAAAAAD5wAADhAAAAAAAAP/////AAABBAAjACAAdAB5AHAAZQAgAGkAbgAgAGEAIABmAG8AcgBtAHUAbABhACAAdABvACAAdQBzAGUACgAjACAAZgBvAHIAIABlAC4AZwAuACAAQgBpAGsAZQBTAHQAcgBlAHMAcwAgAC8AIABEAHUAcgBhAHQAaQBvAG4ACgAjACAAYQBzACAAeQBvAHUAIAB0AHkAcABlACAAdABoAGUAIABhAHYAYQBpAGwAYQBiAGwAZQAgAG0AZQB0AHIAaQBjAHMACgAjACAAdwBpAGwAbAAgAGIAZQAgAG8AZgBmAGUAcgBlAGQAIABiAHkAIABhAHUAdABvAGMAbwBtAHAAbABlAHQAZQAKAAAAAQAAAA4AcwBlAGEAcgBjAGgAOgAAAAAAAAAAAQEBAAAAFgBwAG8AdwBlAHIAXwBpAG4AZABlAHgAAAAAAAI=" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="47" name="" title="Tracker" >
		<property name="title" type="QString" value="Tracker" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="config" type="QString" value="{\n  &quot;version&quot;:&quot;2.0&quot;,\n  &quot;widths&quot;:[ 4400, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200 ],\n  &quot;CHARTS&quot;:[\n    { &quot;type&quot;:112,&quot;span&quot;:1,&quot;deep&quot;:35,&quot;column&quot;:0,&quot;order&quot;:0,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{:sl:n:sl:n# column names, if using metrics then best:sl:n# to use metricname() to get correct name for locale:sl:n# otherwise it won&apos;t translate to other languages:sl:nnames {:sl:n    metricname(date,:sl:n         Distance,:sl:n         Duration,:sl:n         60_min_Peak_Power,:sl:n         60_min_Peak_Power_HR,:sl:n         5_min_Peak_Power,:sl:n         Athlete_Weight);:sl:n}:sl:n:sl:n# column units, if using metrics then best:sl:n# to use metricunit() function to get correct string:sl:n# for locale and metric:sl:/imperial:sl:nunits {:sl:n    metricunit(date,:sl:n         Distance,:sl:n         Duration,:sl:n         60_min_Peak_Power,:sl:n         60_min_Peak_Power_HR,:sl:n         5_min_Peak_Power,:sl:n         Athlete_Weight);:sl:n}:sl:n:sl:n# values to display as doubles or strings:sl:n# To aggregate by month, replace week by month:sl:n# and weekday by monthdate below:sl:nvalues {:sl:n    agg &lt;- week(metrics(date));:sl:n    c(datestring(weekdate(uniq(agg))),:sl:n      round(aggregate(metrics(Distance), agg, sum)),:sl:n      timestring(aggregate(metrics(Duration), agg, sum)),:sl:n      round(aggregate(metrics(60_min_Peak_Power), agg, max)),:sl:n      round(aggregate(metrics(60_min_Peak_Power_HR), agg, max)),:sl:n      round(aggregate(metrics(5_min_Peak_Power), agg, max)),:sl:n      round(aggregate(metrics(Athlete_Weight), agg, mean), 1)); :sl:n} :sl:n:sl:n} &quot;,&quot;sortcolumn&quot;:0,&quot;sortorder&quot;:1,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Weekly KPI&quot; }\n  ]\n}\n" />
		<property name="minimumColumns" type="int" value="1" />
	</chart>
	<chart id="7" name="" title="Stress" >
		<property name="title" type="QString" value="Stress" />
		<property name="subtitle" type="QString" value="Stress" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="0" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Mon Feb 24 2014" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="AAAAGgBTAHQAcgBlAHMAcwAgACgAVABJAFMAUwApAAAAHABMAGEAcwB0ACAAMQAyACAAbQBvAG4AdABoAHMAJYcuAAAAAP8AJYiaAAAAAP8AAAABAAH///////////////8AAAAVAAAABAAAAAIAAAAAEgBhAHQAaQBzAHMAXwBsAHQAcwAAADoAQQBlAHIAbwBiAGkAYwAgAFQASQBTAFMAIABMAG8AbgBnACAAVABlAHIAbQAgAFMAdAByAGUAcwBzAAAAOgBBAGUAcgBvAGIAaQBjACAAVABJAFMAUwAgAEwAbwBuAGcAIABUAGUAcgBtACAAUwB0AHIAZQBzAHMAAAASAEEAZQAgAFMAdAByAGUAcwBzAAAAAAABAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAACAAAAAAAAAAE//////////8B//8AAP////8AAAAAAAA/8AAAAAAAAAAAAAAB//8AAAAAAAAAAAAAAAAAAAAAAAAADhD/////AAAACv////8AAAAAAAAAAAwAMgAgAFAAYQByAG0AAAAAAAAAAQAADhAAAAAAAAD//////////wAAAAH/////AAAAAAAAAAABAQEAAAAWAHAAbwB3AGUAcgBfAGkAbgBkAGUAeAAAAAIAAAAAFABhAG4AdABpAHMAcwBfAGwAdABzAAAAPgBBAG4AYQBlAHIAbwBiAGkAYwAgAFQASQBTAFMAIABMAG8AbgBnACAAVABlAHIAbQAgAFMAdAByAGUAcwBzAAAAPgBBAG4AYQBlAHIAbwBiAGkAYwAgAFQASQBTAFMAIABMAG8AbgBnACAAVABlAHIAbQAgAFMAdAByAGUAcwBzAAAAEgBBAG4AIABTAHQAcgBlAHMAcwAAAAAAAQAAAAAAAAAAAAAAAAEAAH/XAAAAAAAAAAAAAH//b/vK3///////////Af////8AAAAAAAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAAWwAAA4Q/////wAAAAr/////AAAAAAAAAAAMADIAIABQAGEAcgBtAAAAAAAAAAEAAA4QAAAAAAAA//////////8AAAAB/////wAAAAAAAAAAAQEBAAAAFgBwAG8AdwBlAHIAXwBpAG4AZABlAHgAAAACAAAAABIAYQB0AGkAcwBzAF8AcwB0AHMAAAA8AEEAZQByAG8AYgBpAGMAIABUAEkAUwBTACAAUwBoAG8AcgB0ACAAVABlAHIAbQAgAFMAdAByAGUAcwBzAAAAPABBAGUAcgBvAGIAaQBjACAAVABJAFMAUwAgAFMAaABvAHIAdAAgAFQAZQByAG0AIABTAHQAcgBlAHMAcwAAABIAQQBlACAAUwB0AHIAZQBzAHMAAAAAAAEAAAAAAAAAAAAAAAABAAB//wAAf/+TVPjzAAAAAAAZbGP//////////wH///v7vLz//wAAAAAAAD/wAAAAAAAAAAAAAAH//wAAAAAAAAAAAAAAAAAAAAPnAAAOEP////8AAAAK/////wAAAAAAAAAADAAyACAAUABhAHIAbQAAAAAAAAAAAAAOEAAAAAAAAP//////////AAAAAf////8AAAAAAAAAAAEBAQAAABYAcABvAHcAZQByAF8AaQBuAGQAZQB4AAAAAgAAAAAUAGEAbgB0AGkAcwBzAF8AcwB0AHMAAABAAEEAbgBhAGUAcgBvAGIAaQBjACAAVABJAFMAUwAgAFMAaABvAHIAdAAgAFQAZQByAG0AIABTAHQAcgBlAHMAcwAAAEAAQQBuAGEAZQByAG8AYgBpAGMAIABUAEkAUwBTACAAUwBoAG8AcgB0ACAAVABlAHIAbQAgAFMAdAByAGUAcwBzAAAAEgBBAG4AIABTAHQAcgBlAHMAcwAAAAAAAQAAAAAAAAAAAAAAAAEAAAABAAB//1+/0TAAAAABBHbdxf//////////Af//xsb///f3AAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAA+cAAA4Q/////wAAAAoAAAAAAAAAAAAAAAAMADIAIABQAGEAcgBtAAAAAAAAA+cAAA4QAAAAAAAA//////////8AAAAB/////wAAAAAAAAAAAQEBAAAAFgBwAG8AdwBlAHIAXwBpAG4AZABlAHgAAAAAAAM=" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="34" name="" title="Power" >
		<property name="title" type="QString" value="Power" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="series" type="int" value="1" />
		<property name="percent" type="int" value="1" />
		<property name="logY" type="bool" value="0" />
		<property name="zeroes" type="bool" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="zoned" type="bool" value="0" />
		<property name="cpZoned" type="bool" value="0" />
		<property name="zoneLimited" type="bool" value="0" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Thu Aug 15 2013" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="plotColor" type="QString" value="#0000ff" />
		<property name="distmetric" type="QString" value="workout_time" />
		<property name="totalmetric" type="QString" value="ride_count" />
		<property name="dataMode" type="bool" value="1" />
		<property name="bin" type="double" value="0.05" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="34" name="" title="Speed" >
		<property name="title" type="QString" value="Speed" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="series" type="int" value="3" />
		<property name="percent" type="int" value="0" />
		<property name="logY" type="bool" value="0" />
		<property name="zeroes" type="bool" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="zoned" type="bool" value="0" />
		<property name="cpZoned" type="bool" value="0" />
		<property name="zoneLimited" type="bool" value="0" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Fri Apr 17 2015" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="plotColor" type="QString" value="#0000ff" />
		<property name="distmetric" type="QString" value="workout_time" />
		<property name="totalmetric" type="QString" value="ride_count" />
		<property name="dataMode" type="bool" value="1" />
		<property name="bin" type="double" value="0.5" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="7" name="" title="Aerobic Power" >
		<property name="title" type="QString" value="Aerobic Power" />
		<property name="subtitle" type="QString" value="Aerobic Power" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="1" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="0" />
		<property name="events" type="bool" value="0" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Thu Aug 15 2013" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="/////wAAABwATABhAHMAdAAgADEAMgAgAG0AbwBuAHQAaABzACWHLAAAAAD/ACWImgAAAAD/AAAAAgAA////////////////AAAAFQAAAAYAAAAHAAAAABYAYQB0AGkAcwBzAF8AcwBjAG8AcgBlAAAAGABBAGUAcgBvAGIAaQBjACAAVABJAFMAUwAAABgAQQBlAHIAbwBiAGkAYwAgAFQASQBTAFMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAf3IAAAAAAAABQAAAAAAJb4Fw//////////8B//8AAFZWmJgAAAAAAAA/8AAAAAAAAAAAAAAB//8AAAAAAAAAAAAAAAABAAAD5wAADhAAAAAeAGEAdABpAHMAcwBfAHMAYwBvAHIAZQBfAHMAdABzAAAACgAAAAAAAAAAAAAAAAwAMgAgAFAAYQByAG0AAAAAAAAAAAAADhAAAAAAAAH//////////wAAAAH/////AAAAAAAAAAABAQEAAAAWAHAAbwB3AGUAcgBfAGkAbgBkAGUAeAAAAAEAAAAAJAA2ADAAbQBfAGMAcgBpAHQAaQBjAGEAbABfAHAAbwB3AGUAcgAAACIANgAwACAAbQBpAG4AIABQAGUAYQBrACAAUABvAHcAZQByAAAAIgA2ADAAIABtAGkAbgAgAFAAZQBhAGsAIABQAG8AdwBlAHIAAAAKAHcAYQB0AHQAcwAAAAAAAwAAAAAAAAAAAAAAAAEAAAAAAAAAAAUlDeAAAH9soXHxCP////8AAAAAAf////8AAAAAAAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAAAAAAA4Q/////wAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAf0UAmmPkAAAAAAAA//////////8AAAAB/////wAAAAAAAAAAAQEBAAAAFgBwAG8AdwBlAHIAXwBpAG4AZABlAHgAAAABAAAAACQAMwAwAG0AXwBjAHIAaQB0AGkAYwBhAGwAXwBwAG8AdwBlAHIAAAAiADMAMAAgAG0AaQBuACAAUABlAGEAawAgAFAAbwB3AGUAcgAAACIAMwAwACAAbQBpAG4AIABQAGUAYQBrACAAUABvAHcAZQByAAAACgB3AGEAdAB0AHMAAAAAAAMAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAACAAB/bKFx763/////AAAAAAH//1VVqqr//wAAAAAAAD/wAAAAAAAAAAAAAAH//wAAAAAAAAAAAAAAAAAAAAAAAAAOEP////8AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAH9FAJpj5AAAAAAAAP//////////AAAAAf////8AAAAAAAAAAAEBAQAAABYAcABvAHcAZQByAF8AaQBuAGQAZQB4AAAAAQAAAAAkADIAMABtAF8AYwByAGkAdABpAGMAYQBsAF8AcABvAHcAZQByAAAAIgAyADAAIABtAGkAbgAgAFAAZQBhAGsAIABQAG8AdwBlAHIAAAAiADIAMAAgAG0AaQBuACAAUABlAGEAawAgAFAAbwB3AGUAcgAAAAoAdwBhAHQAdABzAAAAAAADAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAgAAf2yhce+t/////wAAAAAB//8AAFVVf38AAAAAAAA/8AAAAAAAAAAAAAAB//8AAAAAAAAAAAAAAAAAAAAAAAAADhD/////AAAABgAAAAAAAAAAAAAAAAAAAAAAAAB/RQCaY+QAAAAAAAD//////////wAAAAH/////AAAAAAAAAAABAQEAAAAWAHAAbwB3AGUAcgBfAGkAbgBkAGUAeAAAAAEAAAAAJAAxADAAbQBfAGMAcgBpAHQAaQBjAGEAbABfAHAAbwB3AGUAcgAAACIAMQAwACAAbQBpAG4AIABQAGUAYQBrACAAUABvAHcAZQByAAAAIgAxADAAIABtAGkAbgAgAFAAZQBhAGsAIABQAG8AdwBlAHIAAAAKAHcAYQB0AHQAcwAAAAAAAwAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAIAAH9soXHvrf////8AAAAAAf//AACqqgAAAAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAAAAAAA4Q/////wAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAf0UAmmPkAAAAAAAA//////////8AAAAB/////wAAAAAAAAAAAQEBAAAAFgBwAG8AdwBlAHIAXwBpAG4AZABlAHgAAAABAAAAACIANQBtAF8AYwByAGkAdABpAGMAYQBsAF8AcABvAHcAZQByAAAAIAA1ACAAbQBpAG4AIABQAGUAYQBrACAAUABvAHcAZQByAAAAIAA1ACAAbQBpAG4AIABQAGUAYQBrACAAUABvAHcAZQByAAAACgB3AGEAdAB0AHMAAAAAAAMAAAAAAAAAAAAAAAABAAB/eAAAAAAAAAEYAAAAAAM/DoD/////AAAAAAH/////u7sAAAAAAAAAAD/wAAAAAAAAAAAAAAH//wAAAAAAAAAAAAAAAAAAAAPnAAAOEP////8AAAAGAAAAAAAAAAAAAAAAAAAAAAAAAH9FAJpj5AAAAAAAAP//////////AAAAAf////8AAAAAAAAAAAEBAQAAABYAcABvAHcAZQByAF8AaQBuAGQAZQB4AAAAAAAD" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="7" name="" title="Anaerobic Power" >
		<property name="title" type="QString" value="Anaerobic Power" />
		<property name="subtitle" type="QString" value="Anaerobic Power" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="1" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="0" />
		<property name="events" type="bool" value="0" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Thu Aug 15 2013" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="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" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="18" name="" title="Workout" >
		<property name="title" type="QString" value="Workout" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="f1" type="QString" value="Sport" />
		<property name="f2" type="QString" value="Workout Code" />
		<property name="metric" type="QString" value="coggan_tss" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Thu Aug 15 2013" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="45" name="" title="Equipment" >
		<property name="title" type="QString" value="Equipment" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="settings" type="QString" value="{ &quot;title&quot;: &quot;Distance by Equipment &quot;,\n&quot;description&quot;: &quot;Distance accumulated by Equipment field values, Others used when there are more than 20 values.:sl:nDate Range selection and filters are honored so it is easy to get distance by bikes, shoes, etc. &quot;,\n&quot;type&quot;: 3,\n&quot;animate&quot;: false,\n&quot;intervalrefresh&quot;: false,\n&quot;legendpos&quot;: 2,\n&quot;stack&quot;: false,\n&quot;orientation&quot;: 2,\n&quot;bgcolor&quot;: &quot;#010102&quot;, \n&quot;scale&quot;: 1,\n&quot;SERIES&quot;: [\n{ &quot;name&quot;: &quot;Distance &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot; &quot;, &quot;yname&quot;: &quot;Distance &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n:sl:n        # get Equipment and Distance for each activity in current date range:sl:n        equipment &lt;- metadata(:qu:Equipment:qu:);:sl:n        distance &lt;- metrics(Distance);:sl:n:sl:n        # aggregate by Equipment:sl:n        multisort(ascend, equipment, distance);:sl:n        xx &lt;- uniq(equipment);:sl:n        yy &lt;- aggregate(distance, equipment, sum);:sl:n:sl:n        # order by decreasing distance:sl:n        multisort(descend, yy, xx);:sl:n:sl:n        # use Other if lots of Equipment values:sl:n        trunc &lt;- 20;:sl:n        n &lt;- count(yy);:sl:n        if (n &gt; trunc) {:sl:n            topxx &lt;- head(xx, trunc);:sl:n            topyy &lt;- head(yy, trunc);:sl:n            append(topxx, :qu:Other:qu:);:sl:n            append(topyy, sum(mid(yy, trunc, n-trunc)));:sl:n            xx &lt;- topxx;:sl:n            yy &lt;- topyy;:sl:n        }:sl:n:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#01011e&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 0, &quot;fill&quot;: false} ]\n,\n&quot;AXES&quot;: [\n{ &quot;name&quot;: &quot; &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;Distance &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#01011e&quot;, &quot;axiscolor&quot;: &quot;#01011e&quot;} ]\n}" />
	</chart>
	<chart id="7" name="" title="Library" >
		<property name="title" type="QString" value="Library" />
		<property name="subtitle" type="QString" value="BikeStress and BikeIntensity" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="1" />
		<property name="bin" type="int" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="0" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Tue Mar 11 2014" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="AAAAOABCAGkAawBlAFMAdAByAGUAcwBzACAAYQBuAGQAIABCAGkAawBlAEkAbgB0AGUAbgBzAGkAdAB5AAAAOABCAGkAawBlAFMAdAByAGUAcwBzACAAYQBuAGQAIABCAGkAawBlAEkAbgB0AGUAbgBzAGkAdAB5ACWBdgH9BJj/ACWE2QAAAAD/AAAAAQAB////////////////AAAAFQAAAAIAAAABAAAAABQAYwBvAGcAZwBhAG4AXwB0AHMAcwAAABQAQgBpAGsAZQBTAHQAcgBlAHMAcwAAABQAQgBpAGsAZQBTAHQAcgBlAHMAcwAAABQAQgBpAGsAZQBTAHQAcgBlAHMAcwAAAAAAAQAAAAAAAAAAAAAAAAEAAH+qAAAAAAAAASgAAAAACHD34AAAAAH/////Af///////wAAAAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAA+cAAA4Q/////wAAAAoAAAAAAAAAAAAAAAAMADIAIABQAGEAcgBtAAAAAAAAAAAAAA4QAAEAAAAA/////wAAAQQAIwAgAHQAeQBwAGUAIABpAG4AIABhACAAZgBvAHIAbQB1AGwAYQAgAHQAbwAgAHUAcwBlAAoAIwAgAGYAbwByACAAZQAuAGcALgAgAEIAaQBrAGUAUwB0AHIAZQBzAHMAIAAvACAARAB1AHIAYQB0AGkAbwBuAAoAIwAgAGEAcwAgAHkAbwB1ACAAdAB5AHAAZQAgAHQAaABlACAAYQB2AGEAaQBsAGEAYgBsAGUAIABtAGUAdAByAGkAYwBzAAoAIwAgAHcAaQBsAGwAIABiAGUAIABvAGYAZgBlAHIAZQBkACAAYgB5ACAAYQB1AHQAbwBjAG8AbQBwAGwAZQB0AGUACgAAAAEAAAAOAHMAZQBhAHIAYwBoADoAAAAAAAAAAAEBAAAAABYAcABvAHcAZQByAF8AaQBuAGQAZQB4AAAAAQAAAAASAGMAbwBnAGcAYQBuAF8AaQBmAAAAGgBCAGkAawBlAEkAbgB0AGUAbgBzAGkAdAB5AAAAGgBCAGkAawBlAEkAbgB0AGUAbgBzAGkAdAB5AAAAGgBCAGkAawBlAEkAbgB0AGUAbgBzAGkAdAB5AAAAAAABAAAAAAAAAAAAAAAAAQAAf6oAAAAAAAABKAAAAAAIcPfgAAAAAgAAAAAB/////wAAAAAAAAAAAAA/8AAAAAAAAAAAAAAB//8AAAAAAAAAAAAAAAAAAAAAMAAADhD/////AAAACgAAAAAAAAAAAAAAAAwAMgAgAFAAYQByAG0AAAAAAAAAAAAADhAAAQAAAAD/////AAABBAAjACAAdAB5AHAAZQAgAGkAbgAgAGEAIABmAG8AcgBtAHUAbABhACAAdABvACAAdQBzAGUACgAjACAAZgBvAHIAIABlAC4AZwAuACAAQgBpAGsAZQBTAHQAcgBlAHMAcwAgAC8AIABEAHUAcgBhAHQAaQBvAG4ACgAjACAAYQBzACAAeQBvAHUAIAB0AHkAcABlACAAdABoAGUAIABhAHYAYQBpAGwAYQBiAGwAZQAgAG0AZQB0AHIAaQBjAHMACgAjACAAdwBpAGwAbAAgAGIAZQAgAG8AZgBmAGUAcgBlAGQAIABiAHkAIABhAHUAdABvAGMAbwBtAHAAbABlAHQAZQAKAAAAAQAAAA4AcwBlAGEAcgBjAGgAOgAAAAAAAAAAAQEAAAAAFgBwAG8AdwBlAHIAXwBpAG4AZABlAHgAAAAAAAM=" />
		<property name="useSelected" type="int" value="4" />
	</chart>
</layout>
<layout name="Power Duration" style="0" type="8" expression="isRide" trainswitch="0">
	<chart id="7" name="" title="CP History" >
		<property name="title" type="QString" value="CP History" />
		<property name="subtitle" type="QString" value="CP History" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="0" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Mon Feb 10 2014" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="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" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="33" name="" title="CP" >
		<property name="title" type="QString" value="CP" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="filter" type="QString" value="search:" />
		<property name="mode" type="int" value="0" />
		<property name="showBest" type="bool" value="1" />
		<property name="showTest" type="bool" value="1" />
		<property name="filterBest" type="bool" value="0" />
		<property name="showPercent" type="bool" value="0" />
		<property name="showPowerIndex" type="bool" value="0" />
		<property name="showGrid" type="bool" value="1" />
		<property name="season" type="QString" value="" />
		<property name="cpmodel" type="int" value="3" />
		<property name="fit" type="int" value="0" />
		<property name="fitdata" type="int" value="0" />
		<property name="variant" type="int" value="0" />
		<property name="modelDecay" type="bool" value="0" />
		<property name="ani1" type="int" value="120" />
		<property name="ani2" type="int" value="300" />
		<property name="aei1" type="int" value="600" />
		<property name="aei2" type="int" value="3000" />
		<property name="sani1" type="int" value="20" />
		<property name="sani2" type="int" value="90" />
		<property name="laei1" type="int" value="4000" />
		<property name="laei2" type="int" value="30000" />
		<property name="showPP" type="bool" value="0" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Thu Aug 15 2013" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="shading" type="int" value="1" />
		<property name="showEffort" type="bool" value="0" />
		<property name="showHeat" type="bool" value="0" />
		<property name="showHeatByDate" type="bool" value="0" />
		<property name="showCSLinear" type="bool" value="1" />
		<property name="shadeIntervals" type="int" value="0" />
		<property name="ridePlotMode" type="int" value="0" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="45" name="" title="ODPM" >
		<property name="title" type="QString" value="ODPM" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="settings" type="QString" value="{ &quot;title&quot;: &quot; &quot;,\n&quot;description&quot;: &quot;Fit the odpm and plot it with residuals &quot;,\n&quot;type&quot;: 1,\n&quot;animate&quot;: false,\n&quot;intervalrefresh&quot;: false,\n&quot;legendpos&quot;: 2,\n&quot;stack&quot;: false,\n&quot;orientation&quot;: 1,\n&quot;bgcolor&quot;: &quot;#010102&quot;, \n&quot;scale&quot;: 1,\n&quot;SERIES&quot;: [\n{ &quot;name&quot;: &quot;Model &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;seconds &quot;, &quot;yname&quot;: &quot;watts &quot;, &quot;program&quot;: &quot;{:sl:n:sl:n    finalise {:sl:n        # raw data to fit with, just first 2hr:sl:n        mmp &lt;- head(meanmax(POWER),7200);:sl:n        secs &lt;- seq(1,length(mmp),1);:sl:n        multiuniq(mmp,secs);:sl:n:sl:n        # fit starting values, then LM fit the ODPM model to first hours:sl:n        cp &lt;- 200; W&lt;-11000; pmax &lt;- 1000; a&lt;-40;:sl:n        fit &lt;- lm( W:sl:/x*(1-exp(-x:sl:/(W:sl:/(pmax-cp)))) + cp - a*(log(x:sl:/1800))*(bool(x&gt;1800)), secs, mmp);:sl:n:sl:n        # success, generate prediction data:sl:n        if (fit[0] &lt;&gt; 0) { :sl:n            annotate(label, :qu:Pmax:qu:, round(pmax));:sl:n            annotate(label, :qu:CP:qu:, round(cp));:sl:n            annotate(label, :qu:W&apos;:qu:, round(W));:sl:n :sl:n:sl:n            yy &lt;- sapply(secs, W:sl:/x*(1-exp(-x:sl:/(W:sl:/(pmax-cp)))) + cp - a*(log(x:sl:/1800))*(bool(x&gt;1800))); :sl:n:sl:n            ## time to exhaustion at 300w:sl:n            lbyy &lt;-yy; lbsecs&lt;-secs; multisort(ascend, lbyy,lbsecs);:sl:n            annotate(label, :qu:TTE:qu:, timestring(lbsecs[lowerbound(lbyy,cp)]));:sl:n        }:sl:n:sl:n    }:sl:n:sl:n    x { secs; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#010117&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;Bests &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;seconds &quot;, &quot;yname&quot;: &quot;watts &quot;, &quot;program&quot;: &quot;{:sl:n:sl:n    finalise {:sl:n        # raw data to fit with, just first 2hr:sl:n        mmp &lt;- head(meanmax(POWER),7200);:sl:n        secs &lt;- seq(1,length(mmp),1);:sl:n        multiuniq(mmp,secs);:sl:n    }:sl:n:sl:n    x { secs; }:sl:n    y { mmp; }:sl:n}:sl:n &quot;, &quot;line&quot;: 3, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#010112&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: false, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false} ]\n,\n&quot;AXES&quot;: [\n{ &quot;name&quot;: &quot;seconds &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 1, &quot;maxx&quot;: 7200, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: true, &quot;log&quot;: true, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;watts &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 950, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: true, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#010117&quot;, &quot;axiscolor&quot;: &quot;#010117&quot;} ]\n}" />
	</chart>
	<chart id="45" name="" title="WKO4" >
		<property name="title" type="QString" value="WKO4" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="settings" type="QString" value="{ &quot;title&quot;: &quot; &quot;,\n&quot;description&quot;: &quot;Peronnet Thibault Model, WKO4 Model is basically an unattributed rip-off &quot;,\n&quot;type&quot;: 1,\n&quot;animate&quot;: false,\n&quot;intervalrefresh&quot;: false,\n&quot;legendpos&quot;: 2,\n&quot;stack&quot;: false,\n&quot;orientation&quot;: 1,\n&quot;bgcolor&quot;: &quot;#010102&quot;, \n&quot;scale&quot;: 1,\n&quot;SERIES&quot;: [\n{ &quot;name&quot;: &quot;Model &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;seconds &quot;, &quot;yname&quot;: &quot;watts &quot;, &quot;program&quot;: &quot;{:sl:n:sl:n    finalise {:sl:n        # raw data to fit with, just first 2hr:sl:n        mmp &lt;- head(meanmax(POWER),10000);:sl:n        secs &lt;- seq(1,length(mmp),1);:sl:n        multiuniq(mmp,secs);:sl:n:sl:n        # fit starting values:sl:n        ftp &lt;- 200; frc&lt;-11000; pmax &lt;- 1000; a&lt;-40;:sl:n        tau2&lt;-50; tte&lt;-1800;:sl:n:sl:n        fit &lt;- lm((frc:sl:/x*(1-exp(-x:sl:/(frc:sl:/pmax)))) + ((ftp*(1-exp(-x:sl:/tau2))) - (bool(x&gt;tte)*(a*log(x:sl:/tte)))), secs,mmp);:sl:n:sl:n        # success, generate prediction data:sl:n        if (fit[0] &lt;&gt; 0) { :sl:n            annotate(label, :qu:Pmax:qu:, round(pmax));:sl:n            annotate(label, :qu:FTP:qu:, round(ftp));:sl:n            annotate(label, :qu:FRC:qu:, round(frc));:sl:n            annotate(label, :qu:TTE:qu:, timestring(tte)); :sl:n :sl:n            # cache the paramters so we can use them:sl:n            store(:qu:ftp:qu:,ftp);:sl:n            store(:qu:frc:qu:,frc);:sl:n            store(:qu:pmax:qu:,pmax);:sl:n            store(:qu:tte:qu:,tte);:sl:n            store(:qu:a:qu:,a);:sl:n            store(:qu:tau2:qu:,tau2);:sl:n            store(:qu:secs:qu:, secs);:sl:n:sl:n            # generate the model curve:sl:n            yy &lt;- sapply(secs, (frc:sl:/x*(1-exp(-x:sl:/(frc:sl:/pmax)))) + ((ftp*(1-exp(-x:sl:/tau2))) - (bool(x&gt;tte)*(a*log(x:sl:/tte))))); :sl:n:sl:n        }:sl:n:sl:n    }:sl:n:sl:n    x { round(secs); }:sl:n    y { round(yy); }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#ff0004&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;Bests &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;seconds &quot;, &quot;yname&quot;: &quot;watts &quot;, &quot;program&quot;: &quot;{:sl:n:sl:n    finalise {:sl:n        # raw data to fit with, just first 20 minutes:sl:n        mmp &lt;- head(meanmax(POWER),10000);:sl:n        secs &lt;- seq(1,length(mmp),1);:sl:n    }:sl:n:sl:n    x { round(secs); }:sl:n    y { round(mmp); }:sl:n}:sl:n &quot;, &quot;line&quot;: 3, &quot;symbol&quot;: 0, &quot;size&quot;: 3, &quot;color&quot;: &quot;#ffa71a&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: false, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;pFRC &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;seconds &quot;, &quot;yname&quot;: &quot;watts &quot;, &quot;program&quot;: &quot;{:sl:n:sl:n    finalise {:sl:n            # cache the paramters so we can use them:sl:n            ftp &lt;- fetch(:qu:ftp:qu:);:sl:n            frc &lt;- fetch(:qu:frc:qu:);:sl:n            pmax&lt;- fetch(:qu:pmax:qu:);:sl:n            tte&lt;- fetch(:qu:tte:qu:);:sl:n            a&lt;- fetch(:qu:a:qu:);:sl:n            tau2&lt;- fetch(:qu:tau2:qu:);:sl:n            secs&lt;- fetch(:qu:secs:qu:);:sl:n:sl:n            # generate the model curve:sl:n            yy &lt;- sapply(secs, frc:sl:/x*(1-exp(-x:sl:/(frc:sl:/pmax)))); :sl:n:sl:n    }:sl:n:sl:n    x { round(secs); }:sl:n    y { round(yy); }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#113dff&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: false, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;pFTP &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;seconds &quot;, &quot;yname&quot;: &quot;watts &quot;, &quot;program&quot;: &quot;{:sl:n:sl:n    finalise {:sl:n            # cache the paramters so we can use them:sl:n            ftp &lt;- fetch(:qu:ftp:qu:);:sl:n            frc &lt;- fetch(:qu:frc:qu:);:sl:n            pmax&lt;- fetch(:qu:pmax:qu:);:sl:n            tte&lt;- fetch(:qu:tte:qu:);:sl:n            a&lt;- fetch(:qu:a:qu:);:sl:n            tau2&lt;- fetch(:qu:tau2:qu:);:sl:n            secs&lt;- fetch(:qu:secs:qu:);:sl:n:sl:n            # generate the model curve:sl:n            yy &lt;- sapply(secs, ((ftp*(1-exp(-x:sl:/tau2))) - (bool(x&gt;tte)*(a*log(x:sl:/tte))))); :sl:n:sl:n    }:sl:n:sl:n    x { round(secs); }:sl:n    y { round(yy); }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#4bc045&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false} ]\n,\n&quot;AXES&quot;: [\n{ &quot;name&quot;: &quot;seconds &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 1, &quot;maxx&quot;: 10000, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: true, &quot;log&quot;: true, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;watts &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 950, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: true, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#ff0004&quot;, &quot;axiscolor&quot;: &quot;#ff0004&quot;} ]\n}" />
	</chart>
</layout>
<layout name="Triathlon" style="0" type="8" expression="" trainswitch="0">
	<chart id="47" name="" title="Overview" >
		<property name="title" type="QString" value="Overview" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="config" type="QString" value="{\n  &quot;version&quot;:&quot;2.0&quot;,\n  &quot;widths&quot;:[ 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200, 1200 ],\n  &quot;CHARTS&quot;:[\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:9,&quot;column&quot;:0,&quot;order&quot;:85,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((max(metrics(date))-min(metrics(date))+1):sl:/7,1);  round(10*sum(metrics(Duration):sl:/3600):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;seconds&quot;,&quot;istime&quot;:0,&quot;start&quot;:7,&quot;stop&quot;:14,&quot;datafilter&quot;:&quot;filter: &quot;,&quot;name&quot;:&quot;Weekly Hours&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:5,&quot;column&quot;:0,&quot;order&quot;:88,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((max(metrics(date))-min(metrics(date))+1):sl:/7,1);  round(10*sum(metrics(Activities)):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;filter:Sport=\&quot;Strength\&quot; &quot;,&quot;name&quot;:&quot;Weekly Gym Activities&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:6,&quot;column&quot;:0,&quot;order&quot;:122,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((max(metrics(date))-min(metrics(date))+1):sl:/7,1);  round(10*sum(metrics(Duration):sl:/3600):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;seconds&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:2,&quot;datafilter&quot;:&quot;filter:Sport=\&quot;Strength\&quot; &quot;,&quot;name&quot;:&quot;Weekly Gym Hours&quot; },\n    { &quot;type&quot;:101,&quot;span&quot;:1,&quot;deep&quot;:7,&quot;column&quot;:0,&quot;order&quot;:126,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;athlete_weight&quot;,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Average Weight&quot; },\n    { &quot;type&quot;:109,&quot;span&quot;:1,&quot;deep&quot;:11,&quot;column&quot;:0,&quot;order&quot;:130,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;workout_time&quot;,&quot;meta&quot;:&quot;Sport&quot;,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Time by Sport&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:8,&quot;column&quot;:0,&quot;order&quot;:201,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ round(max(estimates(cp2,cp))); } &quot;,&quot;units&quot;:&quot;watts&quot;,&quot;istime&quot;:0,&quot;start&quot;:200,&quot;stop&quot;:250,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Max Bike CP Estimate &quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:7,&quot;column&quot;:0,&quot;order&quot;:202,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ round(max(pmc(BikeStress, lts))); } &quot;,&quot;units&quot;:&quot;&quot;,&quot;istime&quot;:0,&quot;start&quot;:50,&quot;stop&quot;:150,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Max Bike CTL&quot; },\n    { &quot;type&quot;:103,&quot;span&quot;:1,&quot;deep&quot;:9,&quot;column&quot;:1,&quot;order&quot;:2,&quot;color&quot;:&quot;#010161&quot;,&quot;series&quot;:3,&quot;polarized&quot;:0,&quot;datafilter&quot;:&quot; &quot;,&quot;name&quot;:&quot;Heart Rate Zones&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:5,&quot;column&quot;:1,&quot;order&quot;:88,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((max(metrics(date))-min(metrics(date))+1):sl:/7,1);  round(10*sum(metrics(Activities)):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Weekly Activities&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:6,&quot;column&quot;:1,&quot;order&quot;:89,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((max(metrics(date))-min(metrics(date))+1):sl:/7,1);  round(sum(metrics(TriScore)):sl:/weeks); } &quot;,&quot;units&quot;:&quot;&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Weekly TriScore&quot; },\n    { &quot;type&quot;:101,&quot;span&quot;:1,&quot;deep&quot;:7,&quot;column&quot;:1,&quot;order&quot;:118,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;TriRI&quot;,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Relative intensity&quot; },\n    { &quot;type&quot;:110,&quot;span&quot;:1,&quot;deep&quot;:28,&quot;column&quot;:1,&quot;order&quot;:127,&quot;color&quot;:&quot;#010161&quot;,&quot;xsymbol&quot;:&quot;activity_date&quot;,&quot;ysymbol&quot;:&quot;sRPE&quot;,&quot;zsymbol&quot;:&quot;triscore&quot;,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;All Activities by sRPE&quot; },\n    { &quot;type&quot;:103,&quot;span&quot;:1,&quot;deep&quot;:9,&quot;column&quot;:2,&quot;order&quot;:2,&quot;color&quot;:&quot;#010161&quot;,&quot;series&quot;:6,&quot;polarized&quot;:0,&quot;datafilter&quot;:&quot;filter:isSwim &quot;,&quot;name&quot;:&quot;Swim Pace Zones&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:5,&quot;column&quot;:2,&quot;order&quot;:11,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((max(metrics(date))-min(metrics(date))+1):sl:/7,1);  round(10*sum(metrics(Activities)):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;filter:isSwim &quot;,&quot;name&quot;:&quot;Weekly Swim Activities&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:6,&quot;column&quot;:2,&quot;order&quot;:14,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((max(metrics(date))-min(metrics(date))+1):sl:/7,1);  round(sum(metrics(Distance_Swim)):sl:/weeks); } &quot;,&quot;units&quot;:&quot;m&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;filter:isSwim &quot;,&quot;name&quot;:&quot;Weekly Swim Distance&quot; },\n    { &quot;type&quot;:101,&quot;span&quot;:1,&quot;deep&quot;:7,&quot;column&quot;:2,&quot;order&quot;:16,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;swimscore_xpace&quot;,&quot;datafilter&quot;:&quot;filter:isSwim &quot;,&quot;name&quot;:&quot;Swim xPace&quot; },\n    { &quot;type&quot;:108,&quot;span&quot;:1,&quot;deep&quot;:28,&quot;column&quot;:2,&quot;order&quot;:73,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;total_distance&quot;,&quot;datafilter&quot;:&quot;filter:isSwim &quot;,&quot;name&quot;:&quot;Swims by Distance&quot; },\n    { &quot;type&quot;:103,&quot;span&quot;:1,&quot;deep&quot;:9,&quot;column&quot;:3,&quot;order&quot;:11,&quot;color&quot;:&quot;#010161&quot;,&quot;series&quot;:10,&quot;polarized&quot;:0,&quot;datafilter&quot;:&quot;search: &quot;,&quot;name&quot;:&quot;Bike Power Zones&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:5,&quot;column&quot;:3,&quot;order&quot;:12,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((max(metrics(date))-min(metrics(date))+1):sl:/7,1);  round(10*sum(metrics(Activities)):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;filter:isRide &quot;,&quot;name&quot;:&quot;Weekly Bike Activities&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:6,&quot;column&quot;:3,&quot;order&quot;:34,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((max(metrics(date))-min(metrics(date))+1):sl:/7,1);  round(sum(metrics(Distance)):sl:/weeks); } &quot;,&quot;units&quot;:&quot;km&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;filter:isRide &quot;,&quot;name&quot;:&quot;Weekly Bike Distance&quot; },\n    { &quot;type&quot;:101,&quot;span&quot;:1,&quot;deep&quot;:7,&quot;column&quot;:3,&quot;order&quot;:117,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;coggan_np&quot;,&quot;datafilter&quot;:&quot;filter:isRide &quot;,&quot;name&quot;:&quot;Bike xPower&quot; },\n    { &quot;type&quot;:108,&quot;span&quot;:1,&quot;deep&quot;:28,&quot;column&quot;:3,&quot;order&quot;:118,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;total_distance&quot;,&quot;datafilter&quot;:&quot;filter:isRide &quot;,&quot;name&quot;:&quot;Rides by Distance&quot; },\n    { &quot;type&quot;:103,&quot;span&quot;:1,&quot;deep&quot;:9,&quot;column&quot;:4,&quot;order&quot;:3,&quot;color&quot;:&quot;#010161&quot;,&quot;series&quot;:6,&quot;polarized&quot;:0,&quot;datafilter&quot;:&quot;filter:isRun &quot;,&quot;name&quot;:&quot;Run Pace Zones&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:5,&quot;column&quot;:4,&quot;order&quot;:8,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((max(metrics(date))-min(metrics(date))+1):sl:/7,1);  round(10*sum(metrics(Activities)):sl:/weeks):sl:/10; } &quot;,&quot;units&quot;:&quot;&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;filter:isRun &quot;,&quot;name&quot;:&quot;Weekly Run Activities&quot; },\n    { &quot;type&quot;:107,&quot;span&quot;:1,&quot;deep&quot;:6,&quot;column&quot;:4,&quot;order&quot;:33,&quot;color&quot;:&quot;#010161&quot;,&quot;program&quot;:&quot;{ weeks &lt;- max((max(metrics(date))-min(metrics(date))+1):sl:/7,1);  round(sum(metrics(Distance)):sl:/weeks); } &quot;,&quot;units&quot;:&quot;km&quot;,&quot;istime&quot;:0,&quot;start&quot;:0,&quot;stop&quot;:0,&quot;datafilter&quot;:&quot;filter:isRun &quot;,&quot;name&quot;:&quot;Weekly Run Distance&quot; },\n    { &quot;type&quot;:101,&quot;span&quot;:1,&quot;deep&quot;:7,&quot;column&quot;:4,&quot;order&quot;:35,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;xPace&quot;,&quot;datafilter&quot;:&quot;filter:isRun &amp;&amp; Workout_Code&lt;&gt;\&quot;Walk\&quot; &quot;,&quot;name&quot;:&quot;Run xPace&quot; },\n    { &quot;type&quot;:108,&quot;span&quot;:1,&quot;deep&quot;:28,&quot;column&quot;:4,&quot;order&quot;:36,&quot;color&quot;:&quot;#010161&quot;,&quot;symbol&quot;:&quot;total_distance&quot;,&quot;datafilter&quot;:&quot;filter:isRun &quot;,&quot;name&quot;:&quot;Runs by Distance&quot; }\n  ]\n}\n" />
		<property name="minimumColumns" type="int" value="5" />
	</chart>
	<chart id="7" name="" title="PMC (TriScore)" >
		<property name="title" type="QString" value="PMC (TriScore)" />
		<property name="subtitle" type="QString" value="PMC (TriScore)" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="1" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Sun Feb 7 2016" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="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" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="7" name="" title="VO2 Scores" >
		<property name="title" type="QString" value="VO2 Scores" />
		<property name="subtitle" type="QString" value="VO2 Scores" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="1" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Sun Dec 20 2020" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="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" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="33" name="" title="Run CV" >
		<property name="title" type="QString" value="Run CV" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="filter" type="QString" value="filter:isRun" />
		<property name="mode" type="int" value="5" />
		<property name="showBest" type="bool" value="1" />
		<property name="showTest" type="bool" value="1" />
		<property name="filterBest" type="bool" value="0" />
		<property name="showPercent" type="bool" value="0" />
		<property name="showPowerIndex" type="bool" value="0" />
		<property name="showGrid" type="bool" value="1" />
		<property name="season" type="QString" value="" />
		<property name="cpmodel" type="int" value="3" />
		<property name="fit" type="int" value="0" />
		<property name="fitdata" type="int" value="0" />
		<property name="variant" type="int" value="0" />
		<property name="modelDecay" type="bool" value="0" />
		<property name="ani1" type="int" value="120" />
		<property name="ani2" type="int" value="300" />
		<property name="aei1" type="int" value="420" />
		<property name="aei2" type="int" value="1800" />
		<property name="sani1" type="int" value="20" />
		<property name="sani2" type="int" value="90" />
		<property name="laei1" type="int" value="4000" />
		<property name="laei2" type="int" value="30000" />
		<property name="showPP" type="bool" value="0" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Fri Apr 17 2015" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="shading" type="int" value="1" />
		<property name="showEffort" type="bool" value="0" />
		<property name="showHeat" type="bool" value="0" />
		<property name="showHeatByDate" type="bool" value="0" />
		<property name="showCSLinear" type="bool" value="1" />
		<property name="shadeIntervals" type="int" value="1" />
		<property name="ridePlotMode" type="int" value="0" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="33" name="" title="Swim CV" >
		<property name="title" type="QString" value="Swim CV" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="filter" type="QString" value="filter:isSwim" />
		<property name="mode" type="int" value="5" />
		<property name="showBest" type="bool" value="1" />
		<property name="showTest" type="bool" value="1" />
		<property name="filterBest" type="bool" value="0" />
		<property name="showPercent" type="bool" value="0" />
		<property name="showPowerIndex" type="bool" value="0" />
		<property name="showGrid" type="bool" value="1" />
		<property name="season" type="QString" value="" />
		<property name="cpmodel" type="int" value="3" />
		<property name="fit" type="int" value="0" />
		<property name="fitdata" type="int" value="0" />
		<property name="variant" type="int" value="0" />
		<property name="modelDecay" type="bool" value="0" />
		<property name="ani1" type="int" value="120" />
		<property name="ani2" type="int" value="300" />
		<property name="aei1" type="int" value="420" />
		<property name="aei2" type="int" value="1800" />
		<property name="sani1" type="int" value="20" />
		<property name="sani2" type="int" value="90" />
		<property name="laei1" type="int" value="4000" />
		<property name="laei2" type="int" value="30000" />
		<property name="showPP" type="bool" value="0" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Tue May 10 2022" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="shading" type="int" value="1" />
		<property name="showEffort" type="bool" value="0" />
		<property name="showHeat" type="bool" value="0" />
		<property name="showHeatByDate" type="bool" value="0" />
		<property name="showCSLinear" type="bool" value="1" />
		<property name="shadeIntervals" type="int" value="1" />
		<property name="ridePlotMode" type="int" value="0" />
		<property name="useSelected" type="int" value="0" />
	</chart>
	<chart id="7" name="" title="Weekly Distance" >
		<property name="title" type="QString" value="Weekly Distance" />
		<property name="subtitle" type="QString" value="Distance" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="1" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="0" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Sun Dec 20 2020" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="/////wAAABwATABhAHMAdAAgADEAMgAgAG0AbwBuAHQAaABzACWHLAAAAAD/ACWImgAAAAD/AAAAAgAB////////////////AAAAFQAAAAMAAAAIAP////8AAAAAAAAACABTAHcAaQBtAAAABABrAG0AAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAADI1pgAAAAAAwZvUAAAAAB/////wH//6qq/////wAAAAAAAD/wAAAAAAAAAAAAAAH//wAAAAAAAAAAAAAAAAAAAAPnAAAOEP////8AAAAKAAAABAAAAAAAAAAADAAyACAAUABhAHIAbQAAAAAAAAPnAAAOEAABAAAAAP////8AAAAyACMAIABTAHcAaQBtAAoARABpAHMAdABhAG4AYwBlAF8AUwB3AGkAbQAvADEAMAAwADAAAAAAAAAAIABmAGkAbAB0AGUAcgA6AGkAcwBTAHcAaQBtADwAPgAwAAAAAAAAAAABAQD/////AAAACAD/////AAAAAAAAAAgAQgBpAGsAZQAAAAQAawBtAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAyNaYAAAAAAMGb1AAAAAAf////8B//9VVf//f38AAAAAAAA/8AAAAAAAAAAAAAAB//8AAAAAAAAAAAAAAAAAAAAD5wAADhD/////AAAACgAAAAQAAAAAAAAAAAwAMgAgAFAAYQByAG0AAAAAAAAD5wAADhAAAQAAAAD/////AAAAHgAjACAAQgBpAGsAZQAKAEQAaQBzAHQAYQBuAGMAZQAAAAAAAAAmAGYAaQBsAHQAZQByADoAUwBwAG8AcgB0AD0AIgBCAGkAawBlACIAAAAAAAAAAAEBAP////8AAAAIAP////8AAAAAAAAABgBSAHUAbgAAAAQAawBtAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAyNaYAAAAAAMGb1AAAAAAf////8B/////6qqf38AAAAAAAA/8AAAAAAAAAAAAAAB//8AAAAAAAAAAAAAAAAAAAAD5wAADhD/////AAAACgAAAAQAAAAAAAAAAAwAMgAgAFAAYQByAG0AAAAAAAAD5wAADhAAAQAAAAD/////AAAAHAAjACAAUgB1AG4ACgBEAGkAcwB0AGEAbgBjAGUAAAAAAAAAHgBmAGkAbAB0AGUAcgA6AGkAcwBSAHUAbgA8AD4AMAAAAAAAAAAAAQEA/////wAAAAAAAw==" />
		<property name="useSelected" type="int" value="0" />
	</chart>
	<chart id="44" name="" title="Tri Mix" >
		<property name="title" type="QString" value="Tri Mix" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="script" type="QString" value="\n\n## R (Daimon) -&gt; Python (Fe)\n##.....................................................\n##.....................................................\n##\n## R-chart script.\n## Chart: SS-SR\n## Creator: Daimon\n##\n## For use with GoldenCheetah.\n## tested on GC.version() is &quot;DEV-V3.5 1705&quot;\n##\n## .................................................\n##\n## Tri Mix\n## Last Edited At: 2017-09-26 - Creator: Daimon\n## Triathlon\n## Chart to display the relation between Swim-Bike-Run in the selected Data Range as\n## function of activities / duration / distance.\n\n## Default graph is pie chart.\n## (in script &quot;pie=TRUE&quot; displays pie charts, &quot;pie=FALSE&quot; displays bar graph)\n\n## Remark:\n## if the triathlon sports are not defined as the default English &quot;Swim&quot;,&quot;Bike&quot;,&quot;Run&quot; then change the names accoordingly in the script &quot;sportlist=c(&quot;Swim&quot;,&quot;Bike&quot;,&quot;Run&quot;)&quot;\n## \n##.....................................................\n##\n## Python script\n## Chart: Py_tri_mix_01   (cover R tri mix)\n## Creator: Fe \n##\n## GC.version() &quot;V3.6-RC1&quot; (Build id: 4010 2022/07/04)\n##\n## 08&apos;2022\n## Python Script \n##\n## Python1: pre-installed (Build id: 4010 2022/07/04)\n## Plotly1: pre-installed (Build id: 4010 2022/07/04)\n##\n## Python2: 3.7.9 (Aug 17 2020)\n## Plotly2: 4.6.0 --&gt; 5.2.1\n##\n## Golden Cheetah: &quot;V3.6-RC1&quot; (Build id: 4010 2022/07/04)\n## Trends\n##\n##.....................................................\n\n\n## packages\nimport numpy as np\nimport plotly as ply\nimport datetime\nimport tempfile\nimport pathlib\nfrom plotly import tools\nimport plotly.graph_objs as go\n\n#......................................................\n\ntemp_file = tempfile.NamedTemporaryFile(mode=&quot;w+t&quot;, prefix=&quot;GC_&quot;, suffix=&quot;.html&quot;, delete=False)\n\n#......................................................\n\npie=True## False\n\nsportlist=[&quot;Swim&quot;,&quot;Bike&quot;,&quot;Run&quot;]\n\ncolor=[&apos;rgb(87,140,181)&apos;,&apos;rgb(255, 153, 0)&apos;,&apos;rgb(133,166,122)&apos;]\n#&apos;rgb(255,214,77)&apos;\n\nheader1=&apos;Activities&apos; #&quot;\nheader2=&apos;Duration  (h:mm:ss)&apos;\nheader3=&apos;Distance (km)&apos;\nheader4=&apos;Normalized effort (%)&apos; ##???\npaper_bgcolor=&apos;rgb(20,20,20)&apos;\nplot_bgcolor=&apos;rgb(20,20,20)&apos;\n\nmetrics=GC.seasonMetrics(all=False, filter=&apos;&apos;, compare=False)\ntrg=[];time=[];distance=[]\n\nfor sport_name in sportlist:\n    filter=np.array(metrics[&apos;Sport&apos;])==[sport_name]\n    trg.append(len(np.array(metrics[&apos;Duration&apos;])[filter]))\n    time.append(np.sum(np.array(metrics[&apos;Duration&apos;])[filter]))\n    distance.append(np.sum(np.array(metrics[&apos;Distance&apos;])[filter]))\n\n\n## trg=[50,70,35] ## random values, only for plot jpg\n## time=[70000,158529,45000] ## random values, only for plot jpg\n## distance=[100,1000,450] ## random values, only for plot jpg\n\n\ndef hms(seconds):\n    h = int(seconds // 3600)\n    m = int(seconds % 3600 // 60)\n    s = int(seconds % 3600 % 60)\n    return &apos;{:02d}:{:02d}:{:02d}&apos;.format(h, m, s)\n\ntime_hms=[hms(sec) for sec in time]\n\ntrace=[];layout=[]\n\nif pie:\n    trace1 = dict(\n      values=trg,\n      marker=dict(colors=color),labels=sportlist,textfont=dict(size=13,color=&apos;white&apos;),\n      type=&apos;pie&apos;,\n      hoverinfo=&apos;label+percent&apos;,textinfo=&apos;value+label&apos;,textposition=&apos;outside&apos;,\n      #domain=dict(column=0,row=0),\n      domain=dict(x=[0,0.49],y=[0.55,1])\n      )\n    trace.append(trace1)\n\n    trace2 = dict(\n      values=time,\n      marker=dict(colors=color),labels=sportlist,textfont=dict(size=13,color=&apos;white&apos;),\n      type=&apos;pie&apos;,\n      text=time_hms,#[hms(sec) for sec in time],\n      hoverinfo=&apos;percent+label&apos;,textinfo=&apos;text+label&apos;,textposition=&apos;outside&apos;,\n      #domain=dict(column=1,row=0),\n      domain=dict(x=[0.51,1.0],y=[0.55,1])\n      )\n    trace.append(trace2)\n\n    trace3 = dict(\n      values=np.round(distance,2),\n      marker=dict(colors=color),labels=sportlist,textfont=dict(size=13,color=&apos;white&apos;),\n      type=&apos;pie&apos;,\n      hoverinfo=&apos;label+percent&apos;,textinfo=&apos;value+label&apos;,textposition=&apos;outside&apos;,\n      #domain=dict(column=0,row=1)\n      domain=dict(x=[0,0.49],y=[0,0.45])\n      )\n    trace.append(trace3)\n\n    grid_data=[[0.25,1.05,header1,&apos;orange&apos;],[0.8,1.05,header2,&apos;orange&apos;],[0.25,0.5,header3,&apos;orange&apos;],[0.8,0.4,&apos;Sport&apos;,&apos;lightgreen&apos;]]\n\n    grid_title=[dict(x=a,y=b,text=c,showarrow=False,xanchor=&apos;center&apos;,font=dict(color=d,size=15)) for a,b,c,d in grid_data]\n\n    layout=dict(title=&apos;Tri mix&apos;,titlefont=dict(size=18,color=&apos;rgb(243,218,11)&apos;),paper_bgcolor=paper_bgcolor,plot_bgcolor=plot_bgcolor,grid=dict(rows=2,columns=2),#columns=2),\n    legend=dict(x=0.8,y=0.25,xanchor=&quot;center&quot;,font=dict(color=&apos;white&apos;)),\n    annotations=grid_title\n    )\n\nelse:\n\n    trace1 = dict(\n      x=sportlist,y=trg,\n      name=header1,\n      text=trg,marker=dict(color=color),textfont=dict(size=14,color=&apos;white&apos;),\n      type=&apos;bar&apos;,\n      xaxis=&apos;x1&apos;,yaxis=&apos;y1&apos;,\n      )\n    trace.append(trace1)\n\n    trace2 = dict(\n      x=sportlist,y=time,\n      name=header2,\n      text=time_hms,marker=dict(color=color),textfont=dict(size=14,color=&apos;white&apos;),\n      type=&apos;bar&apos;,\n      xaxis=&apos;x2&apos;,yaxis=&apos;y2&apos;,\n      )\n    trace.append(trace2)\n\n    trace3 = dict(\n      x=sportlist,y=np.round(distance,2),\n      name=header3,\n      text=np.round(distance,2),marker=dict(color=color),textfont=dict(size=14,color=&apos;white&apos;),\n      type=&apos;bar&apos;,\n      xaxis=&apos;x3&apos;,yaxis=&apos;y3&apos;,\n      )\n    trace.append(trace3)\n\n    trace4 = dict(\n      x=[0,1],y=[0,1],mode=&quot;lines&quot;,line=dict(color=plot_bgcolor),\n      xaxis=&apos;x4&apos;,yaxis=&apos;y4&apos;,\n      )\n    trace.append(trace4)\n\n\n    axis=dict(\n        showline=False,zeroline=False,showgrid=False,mirror=False,tickfont=dict(size=11,color=&apos;lightgrey&apos;))\n        \n    grid_data=[[len(trg)/3,max(trg)*1.08,header1,&apos;orange&apos;,&apos;x1&apos;,&apos;y1&apos;],[len(time)/3,max(time)*1.08,header2,&apos;orange&apos;,&apos;x2&apos;,&apos;y2&apos;],[len(distance)/3,max(distance)*1.08,header3,&apos;orange&apos;,&apos;x3&apos;,&apos;y3&apos;]]#,[1/2,1/2,&apos;Sport&apos;,&apos;lightgreen&apos;,&apos;x4&apos;,&apos;y4&apos;]]\n\n    grid_title=[dict(x=a,y=b,text=c,xref=e,yref=f,showarrow=False,font=dict(color=d,size=14)) for a,b,c,d,e,f in grid_data]\n\n    grid_data_4=[[1/2,1/1.2,&apos;Sport :&apos;,&apos;white&apos;,&apos;x4&apos;,&apos;y4&apos;,17,&apos;left&apos;],[1/2,1/1.4,&apos;- &apos;+str(sportlist[0]),color[0],&apos;x4&apos;,&apos;y4&apos;,15,&apos;left&apos;],[1/2,1/1.6,&apos;- &apos;+str(sportlist[1]),color[1],&apos;x4&apos;,&apos;y4&apos;,15,&apos;left&apos;],[1/2,1/1.9,&apos;- &apos;+str(sportlist[2]),color[2],&apos;x4&apos;,&apos;y4&apos;,15,&apos;left&apos;]]\n\n    grid_title_4=[dict(x=a,y=b,text=c,xref=e,yref=f,showarrow=False,font=dict(color=d,size=g),xanchor=h) for a,b,c,d,e,f,g,h in grid_data_4]\n                \n\n    layout=dict(\n      title=&apos;Tri mix&apos;,titlefont=dict(size=18,color=&apos;rgb(243,218,11)&apos;),\n      paper_bgcolor=paper_bgcolor,plot_bgcolor=plot_bgcolor,bargap=0,showlegend=False,\n      xaxis1=dict(axis,**dict(domain=[0.0,0.45], anchor=&apos;y1&apos;)),\n      xaxis2=dict(axis,**dict(domain=[0.55, 1.0], anchor=&apos;y2&apos;)),\n      xaxis3=dict(axis,**dict(domain=[0.0, 0.45],anchor=&apos;y3&apos;)),\n      xaxis4=dict(axis,**dict(domain=[0.55, 1.0],anchor=&apos;y4&apos;,showticklabels=False)),  \n      yaxis1=dict(axis,**dict(domain=[0.55, 1.0], anchor=&apos;x1&apos;,showticklabels=False)),\n      yaxis2=dict(axis,**dict(domain=[0.55,1.0], anchor=&apos;x2&apos;,showticklabels=False)),\n      yaxis3=dict(axis,**dict(domain=[0.0, 0.45], anchor=&apos;x3&apos;,showticklabels=False)),\n      yaxis4=dict(axis,**dict(domain=[0.0, 0.45], anchor=&apos;x4&apos;,showticklabels=False)),\n      #legend=dict(x=0.8,y=0.15,xanchor=&quot;center&quot;,font=dict(color=&apos;white&apos;)),\n      annotations=grid_title+grid_title_4\n    )\n\n\n\nfig = dict(data=trace, layout=layout)\n\nply.offline.plot(fig,auto_open = False, filename=temp_file.name, validate=False)\n\nGC.webpage(pathlib.Path(temp_file.name).as_uri())\n\n\n\n" />
		<property name="state" type="QString" value="" />
		<property name="showConsole" type="bool" value="0" />
		<property name="asWeb" type="bool" value="1" />
	</chart>
</layout>
<layout name="Measures" style="0" type="8" expression="" trainswitch="0">
	<chart id="45" name="" title="Weight History" >
		<property name="title" type="QString" value="Weight History" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="settings" type="QString" value="{ &quot;title&quot;: &quot; &quot;,\n&quot;description&quot;: &quot;Plotting weight :qu:quotes:qu: and :qu:escaped quotes:qu: &quot;,\n&quot;type&quot;: 1,\n&quot;animate&quot;: false,\n&quot;intervalrefresh&quot;: false,\n&quot;legendpos&quot;: 2,\n&quot;stack&quot;: false,\n&quot;orientation&quot;: 2,\n&quot;bgcolor&quot;: &quot;#010102&quot;, \n&quot;scale&quot;: 1,\n&quot;SERIES&quot;: [\n{ &quot;name&quot;: &quot;Body Fat &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;Percent &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n       xx &lt;- measures(:qu:Body:qu:, :qu:date:qu:);:sl:n       yy &lt;- measures(:qu:Body:qu:, :qu:FATPERCENT:qu:);:sl:n       indexes &lt;- nonzero(yy);:sl:n:sl:n       annotate(lr,dot,:qu:gold:qu:);:sl:n    }:sl:n:sl:n    x { xx[indexes]; }:sl:n    y { yy[indexes]; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 1, &quot;size&quot;: 2, &quot;color&quot;: &quot;#010112&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: false, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;Weight &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;KG &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n       xx &lt;- measures(:qu:Body:qu:, :qu:date:qu:);:sl:n       yy &lt;- measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:);:sl:n:sl:n       annotate(lr,dot,:qu:magenta:qu:);:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 1, &quot;size&quot;: 2, &quot;color&quot;: &quot;#01011c&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false} ]\n,\n&quot;AXES&quot;: [\n{ &quot;name&quot;: &quot;Date &quot;, &quot;type&quot;: 1, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;Percent &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 30, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: true, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#010112&quot;, &quot;axiscolor&quot;: &quot;#010112&quot;},\n{ &quot;name&quot;: &quot;KG &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 100, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: true, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#01011c&quot;, &quot;axiscolor&quot;: &quot;#01011c&quot;} ]\n}" />
	</chart>
	<chart id="45" name="" title="Weight Trend" >
		<property name="title" type="QString" value="Weight Trend" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="settings" type="QString" value="{ &quot;title&quot;: &quot;Linear trend and weekly averages &quot;,\n&quot;description&quot;: &quot;:qu:Per week:qu: is the linear trend slope times 7 &quot;,\n&quot;type&quot;: 1,\n&quot;animate&quot;: false,\n&quot;intervalrefresh&quot;: false,\n&quot;legendpos&quot;: 2,\n&quot;stack&quot;: false,\n&quot;orientation&quot;: 2,\n&quot;bgcolor&quot;: &quot;#010102&quot;, \n&quot;scale&quot;: 1,\n&quot;SERIES&quot;: [\n{ &quot;name&quot;: &quot;Linear &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;Kg &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Body:qu:, :qu:date:qu:);:sl:n        fit &lt;- lr(xx, measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:));:sl:n        yy &lt;- fit[0]*xx+fit[1];:sl:n        annotate(label, :qu:Per Week:qu:, round(70*fit[0]):sl:/10);:sl:n    }:sl:n    x { xx; }:sl:n    y { yy; }:sl:n} &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#bfbf00&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;Weekly &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;Kg &quot;, &quot;program&quot;: &quot;{:sl:n    relevant { length(measures(:qu:Body:qu:, :qu:date:qu:))&gt;=7; }:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Body:qu:, :qu:date:qu:);:sl:n        weeks &lt;- week(xx);:sl:n        weekly &lt;- aggregate(measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:), weeks, mean);:sl:n        yy &lt;- weekly[weeks-weeks[0]];:sl:n        annotate(label, :qu:Weeks:qu:, round(10*(max(xx)-min(xx)+1):sl:/7):sl:/10);:sl:n    }:sl:n    x { xx; }:sl:n    y { yy; }:sl:n} &quot;, &quot;line&quot;: 2, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#8bd0d0&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;Daily &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;Kg &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        avg &lt;- mean(measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:));:sl:n        annotate(label, :qu:Average:qu:, round(10*avg):sl:/10);:sl:n    }:sl:n    x { measures(:qu:Body:qu:, :qu:date:qu:); }:sl:n    y { measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:); }:sl:n}:sl:n &quot;, &quot;line&quot;: 2, &quot;symbol&quot;: 0, &quot;size&quot;: 2, &quot;color&quot;: &quot;#8bcf67&quot;, &quot;opacity&quot;: 100, &quot;legend&quot;: true, &quot;opengl&quot;: false, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false} ]\n,\n&quot;AXES&quot;: [\n{ &quot;name&quot;: &quot;Date &quot;, &quot;type&quot;: 1, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;Kg &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 65, &quot;maxy&quot;: 80, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#bfbf00&quot;, &quot;axiscolor&quot;: &quot;#bfbf00&quot;} ]\n}" />
	</chart>
	<chart id="7" name="" title="HRV &amp; Rest HR" >
		<property name="title" type="QString" value="HRV &amp; Rest HR" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="preset" type="bool" value="0" />
		<property name="bin" type="int" value="0" />
		<property name="shade" type="bool" value="0" />
		<property name="data" type="bool" value="0" />
		<property name="stack" type="bool" value="0" />
		<property name="stackWidth" type="int" value="3" />
		<property name="legend" type="bool" value="1" />
		<property name="events" type="bool" value="0" />
		<property name="banister" type="bool" value="1" />
		<property name="filter" type="QString" value="search:" />
		<property name="fromDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="toDate" type="QDate" value="Sat Jan 1 2000" />
		<property name="startDate" type="QDate" value="Tue May 10 2022" />
		<property name="lastN" type="int" value="7" />
		<property name="lastNX" type="int" value="0" />
		<property name="prevN" type="int" value="0" />
		<property name="settings" type="LTMSettings" value="/////wAAABwATABhAHMAdAAgADEAMgAgAG0AbwBuAHQAaABzACWHLwAAAAD/ACWImwAAAAD/AAAAAQAB////////////////AAAAFQAAAAIAAAAJAAAAACoASAByAHYAXwAtAF8AUgBlAGMAbwB2AGUAcgB5AF8AUABvAGkAbgB0AHMAAAAmAEgAUgBWACAAUgBlAGMAbwB2AGUAcgB5ACAAUABvAGkAbgB0AHMAAAAqAEgAcgB2ACAALQAgAFIAZQBjAG8AdgBlAHIAeQAgAFAAbwBpAG4AdABzAAAAFABSAGUAYwAuAFAAbwBpAG4AdABzAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAABuAAAAWwAAAAAAAAAA//////////8B/////wAAAAAAAAAAAAA/8AAAAAAAAAAAAAAB//8AAAAAAAAAAAAAAAAAAAAABwAADhD/////AAAACgAAAAEAAAAAAQAAAAwAMgAgAFAAYQByAG0AAAAAAAAAAAAADhAAAAAAAAAAAAAAAAAA9gAjACAAdAB5AHAAZQAgAGkAbgAgAGEAIABmAG8AcgBtAHUAbABhACAAdABvACAAdQBzAGUACgAjACAAZgBvAHIAIABlAC4AZwAuACAAVABTAFMAIAAvACAARAB1AHIAYQB0AGkAbwBuAAoAIwAgAGEAcwAgAHkAbwB1ACAAdAB5AHAAZQAgAHQAaABlACAAYQB2AGEAaQBsAGEAYgBsAGUAIABtAGUAdAByAGkAYwBzAAoAIwAgAHcAaQBsAGwAIABiAGUAIABvAGYAZgBlAHIAZQBkACAAYgB5ACAAYQB1AHQAbwBjAG8AbQBwAGwAZQB0AGUACgAAAAEAAAAOAHMAZQBhAHIAYwBoADoAAAABAAAABwEBAAAAABYAcABvAHcAZQByAF8AaQBuAGQAZQB4AAAACQAAAAAQAEgAcgB2AF8ALQBfAEgAUgAAAA4AUgBlAHMAdAAgAEgAUgAAABAASAByAHYAIAAtACAASABSAAAABgBiAHAAbQAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAbgAAAFsAAAAAAAAAAP//////////Af//rKysrAAAAAAAAAAAP/AAAAAAAAAAAAAAAf//AAAAAAAAAAAAAAAAAAAAAAAAAA4Q/////wAAAAoAAAABAAAAAAEAAAAGAGMAcAAyAAAABAAAAAAAAA4QAAAAAAAAAAAABgBiAHAAbQAAAPYAIwAgAHQAeQBwAGUAIABpAG4AIABhACAAZgBvAHIAbQB1AGwAYQAgAHQAbwAgAHUAcwBlAAoAIwAgAGYAbwByACAAZQAuAGcALgAgAFQAUwBTACAALwAgAEQAdQByAGEAdABpAG8AbgAKACMAIABhAHMAIAB5AG8AdQAgAHQAeQBwAGUAIAB0AGgAZQAgAGEAdgBhAGkAbABhAGIAbABlACAAbQBlAHQAcgBpAGMAcwAKACMAIAB3AGkAbABsACAAYgBlACAAbwBmAGYAZQByAGUAZAAgAGIAeQAgAGEAdQB0AG8AYwBvAG0AcABsAGUAdABlAAoAAAABAAAADgBzAGUAYQByAGMAaAA6AAAAAQAAAAEBAQAAAAAWAHAAbwB3AGUAcgBfAGkAbgBkAGUAeAAAAAAAAw==" />
		<property name="useSelected" type="int" value="4" />
	</chart>
	<chart id="44" name="" title="HRV Trends" >
		<property name="title" type="QString" value="HRV Trends" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="script" type="QString" value="##\n## Python program will run on selection.\n##\n\n## This chart plots 7-day moving averages against a \n# band of &quot;normal values&quot; derived by taking the 60-day\n# moving average and subtracting (for the floor) and \n# adding (for the ceiling) 0.75 standard devations to \n# it. \n#\n# Currently this chart uses HRV4Training recovery points.\n# \n# If you want to use rMSSD values instead, make sure you\n# apply a natural log as per recommendation in this forum\n# post:\n# \n# https://forum.trainerroad.com/t/anyone-using-hrv-heart-rate-variability/5664/188?u=cyclhist\n#\n# For the science behind this plot, see: \n#\n# https://www.hrv4training.com/blog/training-prescription-guided-by-heart-rate-variability\n#\n# Thanks to Marco Altini for his work and help!\n\n## BEGINNING OF CONFIGURATION\n\n# The baseline is a moving average of the following \n# number of days\n\nBASELINE_DAYS=7\n\n# The band for the normal range is calculates as a \n# moving average of the following number of days \n# +/- 0.75 standard deviations.\n\nNORMALRANGE_DAYS=60 \n\n# The following variable determines the Training Stress \n# metric. This could be BikeStress, or TSS, or your own\n# metric that tries to compensate for missing power data\n# with HR data somehow. I use BikeStress here. If you use\n# Duration, the plot will chart hours rather than the \n# seconds in the dataset. In that case, you might want \n# to adjust the range on the second yaxis in the code \n# below.\n\nTRAINING_STRESS=&quot;TriScore&quot;\n\n## END OF CONFIGURATION \n\nimport os\nimport tempfile\nimport pandas as pd\nimport plotly\nfrom plotly.graph_objs import Scatter, Layout, Bar, Figure\n\n## Delete old chart\ntry:\n    os.remove(tempfile.gettempdir() + &quot;/temp-plot.html&quot;)\nexcept:\n    pass\n\n## Let&apos;s get dates and recovery points\nmeasuresHistoryWithZeros = pd.DataFrame(GC.seasonMeasures(all = True, group=&quot;Hrv&quot;))[[&quot;date&quot;, &quot;RECOVERY_POINTS&quot;]]\n\nmeasuresSelectionWithZeros = pd.DataFrame(GC.seasonMeasures(all = False, group=&quot;Hrv&quot;))[[&quot;date&quot;, &quot;RECOVERY_POINTS&quot;]]\n\n# Remove zero values\nmeasuresHistory = measuresHistoryWithZeros.query(&quot;RECOVERY_POINTS != 0.0&quot;)\nmeasuresSelection = measuresSelectionWithZeros.query(&quot;RECOVERY_POINTS != 0.0&quot;)\n\n# Get training data\nrawTrainingData = pd.DataFrame(GC.seasonMetrics())[[&apos;date&apos;, TRAINING_STRESS]]\n\n# Convert TSS to number\n\ntrainingDataSeries = rawTrainingData.groupby(&apos;date&apos;)[TRAINING_STRESS].sum()\ntrainingData = pd.DataFrame({&apos;date&apos;: trainingDataSeries.index, TRAINING_STRESS: trainingDataSeries.values})\n\n# Create new columns\nmeasuresHistory[&apos;Baseline&apos;] = measuresHistory[&apos;RECOVERY_POINTS&apos;].rolling(window=BASELINE_DAYS, min_periods=4).mean()\nmeasuresHistory[&apos;NormalRange&apos;] = measuresHistory[&apos;RECOVERY_POINTS&apos;].rolling(window=NORMALRANGE_DAYS, min_periods=20).mean()\nmeasuresHistory[&apos;StandardDeviation&apos;] = measuresHistory[&apos;RECOVERY_POINTS&apos;].rolling(window=NORMALRANGE_DAYS, min_periods=20).std()\nmeasuresHistory[&apos;Ceiling&apos;] = measuresHistory[&apos;NormalRange&apos;] + (0.75 * measuresHistory[&apos;StandardDeviation&apos;])\nmeasuresHistory[&apos;Bottom&apos;] = measuresHistory[&apos;NormalRange&apos;] - (0.75 * measuresHistory[&apos;StandardDeviation&apos;])\n\n# Apply Selection\nhrvData = measuresHistory[measuresHistory[&apos;date&apos;].isin(measuresSelection[&apos;date&apos;])]\n\n# Add Training Data\nallData = hrvData.join(trainingData.set_index(&apos;date&apos;), on=&apos;date&apos;, how=&apos;right&apos;)\n\n\n# Create plots\n\nif TRAINING_STRESS == &quot;Duration&quot;:\n\n    trace0 = Bar(\n        x = allData[&apos;date&apos;],\n        y = (allData[TRAINING_STRESS] / 60) / 60,\n        yaxis = &quot;y2&quot;,\n        name = &quot;Duration [h]&quot;,\n        marker = dict(\n            color = &quot;#1f77b4&quot;\n        )\n    )\n\nelse:\n\n    trace0 = Bar(\n        x = allData[&apos;date&apos;],\n        y = allData[TRAINING_STRESS],\n        yaxis = &quot;y2&quot;,\n        name = TRAINING_STRESS,\n        marker = dict(\n            color = &quot;#1f77b4&quot;\n        )\n    )\n\n\ntrace1 = Scatter(\n    x=hrvData[&apos;date&apos;],\n    y=hrvData[&apos;Ceiling&apos;],\n    fill= None,\n    mode=&apos;lines&apos;,\n    name=&quot;Top Normal&quot;,\n    line=dict(\n        color=&apos;#b3f6d1&apos;,\n    )\n)\ntrace2 = Scatter(\n    x=hrvData[&apos;date&apos;],\n    y=hrvData[&apos;Bottom&apos;],\n    fill=&apos;tonexty&apos;,\n    mode=&apos;lines&apos;,\n    name=&quot;Bottom Normal&quot;,\n    line=dict(\n        color=&apos;#b3f6d1&apos;,\n    )\n)\n\ntrace3 = Scatter(\n    x=hrvData[&apos;date&apos;],\n    y=hrvData[&apos;Baseline&apos;],\n    mode=&apos;lines&apos;,\n    name=&quot;Baseline&quot;,\n    line=dict(\n        color=&apos;red&apos;,\n    )\n)\n\n\ntrace4 = Scatter(\n    x=hrvData[&apos;date&apos;],\n    y=hrvData[&apos;RECOVERY_POINTS&apos;],\n    mode=&apos;lines+markers&apos;,\n    name=&quot;Recovery Points&quot;,\n    line=dict(\n        color=&apos;black&apos;,\n    )\n)\n\n\ndata = [trace0, trace1, trace2, trace3, trace4]\n\nif TRAINING_STRESS == &quot;Duration&quot;:\n    layout = Layout(\n        yaxis = dict(\n            title = &quot;HRV Recovery Points&quot;,\n            range = [4,10]\n        ),\n        yaxis2 = dict(\n            title = &quot;Duration [h]&quot;,\n            overlaying = &quot;y&quot;,\n            side = &quot;right&quot;,\n            range = [0,10]\n        ),\n        legend = dict(\n            orientation = &quot;h&quot;\n        )\n    )\n\nelse:\n    layout = Layout(\n        yaxis = dict(\n            title = &quot;HRV Recovery Points&quot;,\n            range = [4,10]\n        ),\n        yaxis2 = dict(\n            title = &quot;Training Stress&quot;,\n            overlaying = &quot;y&quot;,\n            side = &quot;right&quot;,\n            range = [0,800]\n        ),\n        legend = dict(\n            orientation = &quot;h&quot;\n        )\n    )\n\nfig = Figure(data = data, layout = layout)\n\n## Prepare Plot\nf =plotly.offline.plot(fig, auto_open = False, filename = tempfile.gettempdir() + &quot;/temp-plot.html&quot;)\n\n## Load Plot\nGC.webpage(&quot;file://&quot; + f)\n\n\n" />
		<property name="state" type="QString" value="" />
		<property name="showConsole" type="bool" value="0" />
		<property name="asWeb" type="bool" value="1" />
	</chart>
	<chart id="45" name="" title="Energy" >
		<property name="title" type="QString" value="Energy" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="settings" type="QString" value="{ &quot;title&quot;: &quot;Energy Intake and Expenditure &quot;,\n&quot;description&quot;: &quot;Energy Intake from Nutrition:sl:/Energy Measures:sl:n:sl:nEnergy Expenditure = NEEE + ExEE:sl:n:sl:nNon Exercise Energy Expenditure (NEEE) from Mifflin St Jeor equation for BMR with Activity Factor:sl:n:sl:nExercise Energy Expenditure from Calories metric (based on Duration, Average HR, Sex and Age) &quot;,\n&quot;type&quot;: 1,\n&quot;animate&quot;: false,\n&quot;intervalrefresh&quot;: false,\n&quot;legendpos&quot;: 3,\n&quot;stack&quot;: false,\n&quot;orientation&quot;: 2,\n&quot;bgcolor&quot;: &quot;#010102&quot;, \n&quot;scale&quot;: 1,\n&quot;SERIES&quot;: [\n{ &quot;name&quot;: &quot;Intake &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;kCal &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Nutrition:qu:, :qu:date:qu:);:sl:n        yy &lt;- measures(:qu:Nutrition:qu:, :qu:Energy:qu:);:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg Intake:qu:, round(avg));:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#47d5d5&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;NEEE &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;kCal &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Body:qu:, :qu:date:qu:);:sl:n:sl:n        # Mifflin St Jeor equation for BMR:sl:n        m &lt;- measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:); # mass(kg):sl:n        h &lt;- config(height); # height(m):sl:n        age &lt;- (xx-config(dob)):sl:/365; # age(y):sl:n        s &lt;- config(sex)=:qu:Male:qu: ? 5 : -161;#sex(kCal):sl:n        bmr &lt;- 10*m + 625*h - 5*age + s;:sl:n:sl:n        # Activity Factor (excluding Excercise):sl:n        actFactor &lt;- 1.2; # Mostly sedentary:sl:n:sl:n        # Non-Exercise Energy Expenditure:sl:n        yy &lt;- round(bmr*actFactor);:sl:n:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg NonEx:qu:, round(avg));:sl:n    }:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#d58ed5&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;ExEE &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;kCal &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Body:qu:, :qu:date:qu:);:sl:n:sl:n        # Exercise Energy Expenditure:sl:n        # Aggregate for multiple sessions on a day:sl:n        exee &lt;- aggregate(metrics(Calories), metrics(date), sum);:sl:n        exdd &lt;- aggregate(metrics(date), metrics(date), mean);:sl:n        # Add 0s on rest days (not found on exdd):sl:n        yy &lt;- round(sapply(xx, exdd[lowerbound(exdd, x)]=x ? exee[lowerbound(exdd,x)] : 0));:sl:n:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg Exercise:qu:, round(avg));:sl:n    }:sl:n    x { xx; }:sl:n    y { yy; }:sl:n} &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#40bf5d&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;Expend &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;kCal &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- curve(NEEE, x);:sl:n        yy &lt;- curve(NEEE, y) + curve(ExEE, y);:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg Expend:qu:, round(avg));:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#ff0000&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;Balance &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;kCal &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- curve(Expend, x);:sl:n        yy &lt;- curve(Intake, y) - curve(Expend, y);:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg Balance:qu:, round(avg));:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#b6b600&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false} ]\n,\n&quot;AXES&quot;: [\n{ &quot;name&quot;: &quot;Date &quot;, &quot;type&quot;: 1, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;kCal &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#47d5d5&quot;, &quot;axiscolor&quot;: &quot;#47d5d5&quot;} ]\n}" />
	</chart>
	<chart id="45" name="" title="Nutrition" >
		<property name="title" type="QString" value="Nutrition" />
		<property name="subtitle" type="QString" value="" />
		<property name="widthFactor" type="double" value="2" />
		<property name="heightFactor" type="double" value="2" />
		<property name="style" type="int" value="0" />
		<property name="resizable" type="bool" value="0" />
		<property name="settings" type="QString" value="{ &quot;title&quot;: &quot;Macro Nutrient Distribution &quot;,\n&quot;description&quot;: &quot;PRO:sl:/CHO:sl:/FAT as % of Energy intake and relative to body weight (g:sl:/kg) &quot;,\n&quot;type&quot;: 1,\n&quot;animate&quot;: false,\n&quot;intervalrefresh&quot;: false,\n&quot;legendpos&quot;: 3,\n&quot;stack&quot;: false,\n&quot;orientation&quot;: 2,\n&quot;bgcolor&quot;: &quot;#010102&quot;, \n&quot;scale&quot;: 1,\n&quot;SERIES&quot;: [\n{ &quot;name&quot;: &quot;PRO% &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date% &quot;, &quot;yname&quot;: &quot;% &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Nutrition:qu:, :qu:date:qu:);:sl:n        yy &lt;- 400*measures(:qu:Nutrition:qu:, :qu:PRO:qu:):sl:/measures(:qu:Nutrition:qu:, :qu:Energy:qu:);:sl:n:sl:n        avg &lt;- 400*sum(measures(:qu:Nutrition:qu:, :qu:PRO:qu:)):sl:/sum(measures(:qu:Nutrition:qu:, :qu:Energy:qu:));:sl:n        annotate(label, :qu:Avg PRO %:qu:, round(avg));:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#c7c763&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;CHO% &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date% &quot;, &quot;yname&quot;: &quot;% &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Nutrition:qu:, :qu:date:qu:);:sl:n        yy &lt;- 400*measures(:qu:Nutrition:qu:, :qu:CHO:qu:):sl:/measures(:qu:Nutrition:qu:, :qu:Energy:qu:);:sl:n:sl:n        avg &lt;- 400*sum(measures(:qu:Nutrition:qu:, :qu:CHO:qu:)):sl:/sum(measures(:qu:Nutrition:qu:, :qu:Energy:qu:));:sl:n        annotate(label, :qu:Avg CHO %:qu:, round(avg));:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#46d367&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;FAT% &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date% &quot;, &quot;yname&quot;: &quot;% &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Nutrition:qu:, :qu:date:qu:);:sl:n        yy &lt;- 900*measures(:qu:Nutrition:qu:, :qu:FAT:qu:):sl:/measures(:qu:Nutrition:qu:, :qu:Energy:qu:);:sl:n:sl:n        avg &lt;- 900*sum(measures(:qu:Nutrition:qu:, :qu:FAT:qu:)):sl:/sum(measures(:qu:Nutrition:qu:, :qu:Energy:qu:));:sl:n        annotate(label, :qu:Avg FAT %:qu:, round(avg));:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n} &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#ffaa7f&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;PRO &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;g:sl:/kg &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Nutrition:qu:, :qu:date:qu:);:sl:n        yy &lt;- measures(:qu:Nutrition:qu:, :qu:PRO:qu:):sl:/measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:);:sl:n:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg PRO g:sl:/kg:qu:, round(10*avg):sl:/10);:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#c7c763&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;CHO &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;g:sl:/kg &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Nutrition:qu:, :qu:date:qu:);:sl:n        yy &lt;- measures(:qu:Nutrition:qu:, :qu:CHO:qu:):sl:/measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:);:sl:n:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg CHO g:sl:/kg:qu:, round(10*avg):sl:/10);:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#46d367&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false},\n{ &quot;name&quot;: &quot;FAT &quot;, &quot;group&quot;: &quot; &quot;, &quot;xname&quot;: &quot;Date &quot;, &quot;yname&quot;: &quot;g:sl:/kg &quot;, &quot;program&quot;: &quot;{:sl:n    finalise {:sl:n        xx &lt;- measures(:qu:Nutrition:qu:, :qu:date:qu:);:sl:n        yy &lt;- measures(:qu:Nutrition:qu:, :qu:FAT:qu:):sl:/measures(:qu:Body:qu:, :qu:WEIGHTKG:qu:);:sl:n:sl:n        avg &lt;- mean(yy);:sl:n        annotate(label, :qu:Avg FAT g:sl:/kg:qu:, round(10*avg):sl:/10);:sl:n    }:sl:n:sl:n    x { xx; }:sl:n    y { yy; }:sl:n}:sl:n &quot;, &quot;line&quot;: 1, &quot;symbol&quot;: 0, &quot;size&quot;: 0, &quot;color&quot;: &quot;#ffaa7f&quot;, &quot;opacity&quot;: 1, &quot;legend&quot;: true, &quot;opengl&quot;: true, &quot;datalabels&quot;: false, &quot;aggregate&quot;: 1, &quot;fill&quot;: false} ]\n,\n&quot;AXES&quot;: [\n{ &quot;name&quot;: &quot;Date% &quot;, &quot;type&quot;: 1, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;% &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 100, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: true, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#c7c763&quot;, &quot;axiscolor&quot;: &quot;#c7c763&quot;},\n{ &quot;name&quot;: &quot;Date &quot;, &quot;type&quot;: 1, &quot;orientation&quot;: 1, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#2684f6&quot;, &quot;axiscolor&quot;: &quot;#2684f6&quot;},\n{ &quot;name&quot;: &quot;g:sl:/kg &quot;, &quot;type&quot;: 0, &quot;orientation&quot;: 2, &quot;align&quot;: 1, &quot;minx&quot;: 0, &quot;maxx&quot;: 0, &quot;miny&quot;: 0, &quot;maxy&quot;: 0, &quot;smooth&quot;: 0, &quot;groupby&quot;: 0, &quot;visible&quot;: true, &quot;fixed&quot;: false, &quot;log&quot;: false, &quot;minorgrid&quot;: false, &quot;majorgrid&quot;: true, &quot;labelcolor&quot;: &quot;#c7c763&quot;, &quot;axiscolor&quot;: &quot;#c7c763&quot;} ]\n}" />
	</chart>
</layout>
</layouts>
